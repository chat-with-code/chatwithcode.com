(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8756],{52427:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/scalable-apis-with-graphql-server-codegen-preset",function(){return o(24703)}])},24703:function(e,t,o){"use strict";o.r(t),o.d(t,{CH:function(){return c},chCodeConfig:function(){return d},default:function(){return p.Z}});var r=o(35250),n=o(59398),s=o(46557),a=o(92027);o(78526);var i=o(33865);o(74350);var l=o(76024),p=o(96769);e=o.hmd(e);let c={annotations:l.ds,Code:l.EK},d={staticMediaQuery:"not screen, (max-width: 768px)",theme:{$schema:"vscode://schemas/color-theme",name:"dracula",author:"Zeno Rocha",maintainers:["Derek P Sifford <dereksifford@gmail.com>"],semanticClass:"theme.dracula",semanticHighlighting:!0,dracula:{base:["#282A36","#F8F8F2","#44475A","#6272A4","#8BE9FD","#50FA7B","#FFB86C","#FF79C6","#BD93F9","#FF5555","#F1FA8C"],ansi:["#21222C","#FF5555","#50FA7B","#F1FA8C","#BD93F9","#FF79C6","#8BE9FD","#F8F8F2","#6272A4","#FF6E6E","#69FF94","#FFFFA5","#D6ACFF","#FF92DF","#A4FFFF","#FFFFFF"],brightOther:["#E9F284","#8BE9FE"],other:["#44475A75","#FFFFFF1A","#FFFFFF","#44475A70","#424450","#343746","#21222C","#191A21"]},colors:{"terminal.background":"#282A36","terminal.foreground":"#F8F8F2","terminal.ansiBrightBlack":"#6272A4","terminal.ansiBrightRed":"#FF6E6E","terminal.ansiBrightGreen":"#69FF94","terminal.ansiBrightYellow":"#FFFFA5","terminal.ansiBrightBlue":"#D6ACFF","terminal.ansiBrightMagenta":"#FF92DF","terminal.ansiBrightCyan":"#A4FFFF","terminal.ansiBrightWhite":"#FFFFFF","terminal.ansiBlack":"#21222C","terminal.ansiRed":"#FF5555","terminal.ansiGreen":"#50FA7B","terminal.ansiYellow":"#F1FA8C","terminal.ansiBlue":"#BD93F9","terminal.ansiMagenta":"#FF79C6","terminal.ansiCyan":"#8BE9FD","terminal.ansiWhite":"#F8F8F2",focusBorder:"#6272A4",foreground:"#F8F8F2","selection.background":"#BD93F9",errorForeground:"#FF5555","button.background":"#44475A","button.foreground":"#F8F8F2","button.secondaryBackground":"#282A36","button.secondaryForeground":"#F8F8F2","button.secondaryHoverBackground":"#343746","dropdown.background":"#343746","dropdown.border":"#191A21","dropdown.foreground":"#F8F8F2","input.background":"#282A36","input.foreground":"#F8F8F2","input.border":"#191A21","input.placeholderForeground":"#6272A4","inputOption.activeBorder":"#BD93F9","inputValidation.infoBorder":"#FF79C6","inputValidation.warningBorder":"#FFB86C","inputValidation.errorBorder":"#FF5555","badge.foreground":"#F8F8F2","badge.background":"#44475A","progressBar.background":"#FF79C6","list.activeSelectionBackground":"#44475A","list.activeSelectionForeground":"#F8F8F2","list.dropBackground":"#44475A","list.focusBackground":"#44475A75","list.highlightForeground":"#8BE9FD","list.hoverBackground":"#44475A75","list.inactiveSelectionBackground":"#44475A75","list.warningForeground":"#FFB86C","list.errorForeground":"#FF5555","activityBar.background":"#343746","activityBar.inactiveForeground":"#6272A4","activityBar.foreground":"#F8F8F2","activityBar.activeBorder":"#FF79C680","activityBar.activeBackground":"#BD93F910","activityBarBadge.background":"#FF79C6","activityBarBadge.foreground":"#F8F8F2","sideBar.background":"#21222C","sideBarTitle.foreground":"#F8F8F2","sideBarSectionHeader.background":"#282A36","sideBarSectionHeader.border":"#191A21","editorGroup.border":"#BD93F9","editorGroup.dropBackground":"#44475A70","editorGroupHeader.tabsBackground":"#191A21","tab.activeBackground":"#282A36","tab.activeForeground":"#F8F8F2","tab.border":"#191A21","tab.activeBorderTop":"#FF79C680","tab.inactiveBackground":"#21222C","tab.inactiveForeground":"#6272A4","editor.foreground":"#F8F8F2","editor.background":"#282A36","editorLineNumber.foreground":"#6272A4","editor.selectionBackground":"#44475A","editor.selectionHighlightBackground":"#424450","editor.foldBackground":"#21222C","editor.wordHighlightBackground":"#8BE9FD50","editor.wordHighlightStrongBackground":"#50FA7B50","editor.findMatchBackground":"#FFB86C80","editor.findMatchHighlightBackground":"#FFFFFF40","editor.findRangeHighlightBackground":"#44475A75","editor.hoverHighlightBackground":"#8BE9FD50","editor.lineHighlightBorder":"#44475A","editorLink.activeForeground":"#8BE9FD","editor.rangeHighlightBackground":"#BD93F915","editor.snippetTabstopHighlightBackground":"#282A36","editor.snippetTabstopHighlightBorder":"#6272A4","editor.snippetFinalTabstopHighlightBackground":"#282A36","editor.snippetFinalTabstopHighlightBorder":"#50FA7B","editorWhitespace.foreground":"#FFFFFF1A","editorIndentGuide.background":"#FFFFFF1A","editorIndentGuide.activeBackground":"#FFFFFF45","editorRuler.foreground":"#FFFFFF1A","editorCodeLens.foreground":"#6272A4","editorBracketHighlight.foreground1":"#F8F8F2","editorBracketHighlight.foreground2":"#FF79C6","editorBracketHighlight.foreground3":"#8BE9FD","editorBracketHighlight.foreground4":"#50FA7B","editorBracketHighlight.foreground5":"#BD93F9","editorBracketHighlight.foreground6":"#FFB86C","editorBracketHighlight.unexpectedBracket.foreground":"#FF5555","editorOverviewRuler.border":"#191A21","editorOverviewRuler.selectionHighlightForeground":"#FFB86C","editorOverviewRuler.wordHighlightForeground":"#8BE9FD","editorOverviewRuler.wordHighlightStrongForeground":"#50FA7B","editorOverviewRuler.modifiedForeground":"#8BE9FD80","editorOverviewRuler.addedForeground":"#50FA7B80","editorOverviewRuler.deletedForeground":"#FF555580","editorOverviewRuler.errorForeground":"#FF555580","editorOverviewRuler.warningForeground":"#FFB86C80","editorOverviewRuler.infoForeground":"#8BE9FD80","editorError.foreground":"#FF5555","editorWarning.foreground":"#8BE9FD","editorGutter.modifiedBackground":"#8BE9FD80","editorGutter.addedBackground":"#50FA7B80","editorGutter.deletedBackground":"#FF555580","gitDecoration.modifiedResourceForeground":"#8BE9FD","gitDecoration.deletedResourceForeground":"#FF5555","gitDecoration.untrackedResourceForeground":"#50FA7B","gitDecoration.ignoredResourceForeground":"#6272A4","gitDecoration.conflictingResourceForeground":"#FFB86C","diffEditor.insertedTextBackground":"#50FA7B20","diffEditor.removedTextBackground":"#FF555550","editorWidget.background":"#21222C","editorSuggestWidget.background":"#21222C","editorSuggestWidget.foreground":"#F8F8F2","editorSuggestWidget.selectedBackground":"#44475A","editorHoverWidget.background":"#282A36","editorHoverWidget.border":"#6272A4","editorMarkerNavigation.background":"#21222C","peekView.border":"#44475A","peekViewEditor.background":"#282A36","peekViewEditor.matchHighlightBackground":"#F1FA8C80","peekViewResult.background":"#21222C","peekViewResult.fileForeground":"#F8F8F2","peekViewResult.lineForeground":"#F8F8F2","peekViewResult.matchHighlightBackground":"#F1FA8C80","peekViewResult.selectionBackground":"#44475A","peekViewResult.selectionForeground":"#F8F8F2","peekViewTitle.background":"#191A21","peekViewTitleDescription.foreground":"#6272A4","peekViewTitleLabel.foreground":"#F8F8F2","merge.currentHeaderBackground":"#50FA7B90","merge.incomingHeaderBackground":"#BD93F990","editorOverviewRuler.currentContentForeground":"#50FA7B","editorOverviewRuler.incomingContentForeground":"#BD93F9","panel.background":"#282A36","panel.border":"#BD93F9","panelTitle.activeBorder":"#FF79C6","panelTitle.activeForeground":"#F8F8F2","panelTitle.inactiveForeground":"#6272A4","statusBar.background":"#191A21","statusBar.foreground":"#F8F8F2","statusBar.debuggingBackground":"#FF5555","statusBar.debuggingForeground":"#191A21","statusBar.noFolderBackground":"#191A21","statusBar.noFolderForeground":"#F8F8F2","statusBarItem.prominentBackground":"#FF5555","statusBarItem.prominentHoverBackground":"#FFB86C","statusBarItem.remoteForeground":"#282A36","statusBarItem.remoteBackground":"#BD93F9","titleBar.activeBackground":"#21222C","titleBar.activeForeground":"#F8F8F2","titleBar.inactiveBackground":"#191A21","titleBar.inactiveForeground":"#6272A4","extensionButton.prominentForeground":"#F8F8F2","extensionButton.prominentBackground":"#50FA7B90","extensionButton.prominentHoverBackground":"#50FA7B60","pickerGroup.border":"#BD93F9","pickerGroup.foreground":"#8BE9FD","debugToolBar.background":"#21222C","walkThrough.embeddedEditorBackground":"#21222C","settings.headerForeground":"#F8F8F2","settings.modifiedItemIndicator":"#FFB86C","settings.dropdownBackground":"#21222C","settings.dropdownForeground":"#F8F8F2","settings.dropdownBorder":"#191A21","settings.checkboxBackground":"#21222C","settings.checkboxForeground":"#F8F8F2","settings.checkboxBorder":"#191A21","settings.textInputBackground":"#21222C","settings.textInputForeground":"#F8F8F2","settings.textInputBorder":"#191A21","settings.numberInputBackground":"#21222C","settings.numberInputForeground":"#F8F8F2","settings.numberInputBorder":"#191A21","breadcrumb.foreground":"#6272A4","breadcrumb.background":"#282A36","breadcrumb.focusForeground":"#F8F8F2","breadcrumb.activeSelectionForeground":"#F8F8F2","breadcrumbPicker.background":"#191A21","listFilterWidget.background":"#343746","listFilterWidget.outline":"#424450","listFilterWidget.noMatchesOutline":"#FF5555"},tokenColors:[{settings:{foreground:"#F8F8F2",background:"#282A36"}},{scope:["emphasis"],settings:{fontStyle:"italic"}},{scope:["strong"],settings:{fontStyle:"bold"}},{scope:["header"],settings:{foreground:"#BD93F9"}},{scope:["meta.diff","meta.diff.header"],settings:{foreground:"#6272A4"}},{scope:["markup.inserted"],settings:{foreground:"#50FA7B"}},{scope:["markup.deleted"],settings:{foreground:"#FF5555"}},{scope:["markup.changed"],settings:{foreground:"#FFB86C"}},{scope:["invalid"],settings:{foreground:"#FF5555",fontStyle:"underline italic"}},{scope:["invalid.deprecated"],settings:{foreground:"#F8F8F2",fontStyle:"underline italic"}},{scope:["entity.name.filename"],settings:{foreground:"#F1FA8C"}},{scope:["markup.error"],settings:{foreground:"#FF5555"}},{name:"Underlined markup",scope:["markup.underline"],settings:{fontStyle:"underline"}},{name:"Bold markup",scope:["markup.bold"],settings:{fontStyle:"bold",foreground:"#FFB86C"}},{name:"Markup headings",scope:["markup.heading"],settings:{fontStyle:"bold",foreground:"#BD93F9"}},{name:"Markup italic",scope:["markup.italic"],settings:{foreground:"#F1FA8C",fontStyle:"italic"}},{name:"Bullets, lists (prose)",scope:["beginning.punctuation.definition.list.markdown","beginning.punctuation.definition.quote.markdown","punctuation.definition.link.restructuredtext"],settings:{foreground:"#8BE9FD"}},{name:"Inline code (prose)",scope:["markup.inline.raw","markup.raw.restructuredtext"],settings:{foreground:"#50FA7B"}},{name:"Links (prose)",scope:["markup.underline.link","markup.underline.link.image"],settings:{foreground:"#8BE9FD"}},{name:"Link text, image alt text (prose)",scope:["meta.link.reference.def.restructuredtext","punctuation.definition.directive.restructuredtext","string.other.link.description","string.other.link.title"],settings:{foreground:"#FF79C6"}},{name:"Blockquotes (prose)",scope:["entity.name.directive.restructuredtext","markup.quote"],settings:{foreground:"#F1FA8C",fontStyle:"italic"}},{name:"Horizontal rule (prose)",scope:["meta.separator.markdown"],settings:{foreground:"#6272A4"}},{name:"Code blocks",scope:["fenced_code.block.language","markup.raw.inner.restructuredtext","markup.fenced_code.block.markdown punctuation.definition.markdown"],settings:{foreground:"#50FA7B"}},{name:"Prose constants",scope:["punctuation.definition.constant.restructuredtext"],settings:{foreground:"#BD93F9"}},{name:"Braces in markdown headings",scope:["markup.heading.markdown punctuation.definition.string.begin","markup.heading.markdown punctuation.definition.string.end"],settings:{foreground:"#BD93F9"}},{name:"Braces in markdown paragraphs",scope:["meta.paragraph.markdown punctuation.definition.string.begin","meta.paragraph.markdown punctuation.definition.string.end"],settings:{foreground:"#F8F8F2"}},{name:"Braces in markdown blockquotes",scope:["markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.begin","markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.end"],settings:{foreground:"#F1FA8C"}},{name:"User-defined class names",scope:["entity.name.type.class","entity.name.class"],settings:{foreground:"#8BE9FD",fontStyle:"normal"}},{name:"this, super, self, etc.",scope:["keyword.expressions-and-types.swift","keyword.other.this","variable.language","variable.language punctuation.definition.variable.php","variable.other.readwrite.instance.ruby","variable.parameter.function.language.special"],settings:{foreground:"#BD93F9",fontStyle:"italic"}},{name:"Inherited classes",scope:["entity.other.inherited-class"],settings:{fontStyle:"italic",foreground:"#8BE9FD"}},{name:"Comments",scope:["comment","punctuation.definition.comment","unused.comment","wildcard.comment"],settings:{foreground:"#6272A4"}},{name:"JSDoc-style keywords",scope:["comment keyword.codetag.notation","comment.block.documentation keyword","comment.block.documentation storage.type.class"],settings:{foreground:"#FF79C6"}},{name:"JSDoc-style types",scope:["comment.block.documentation entity.name.type"],settings:{foreground:"#8BE9FD",fontStyle:"italic"}},{name:"JSDoc-style type brackets",scope:["comment.block.documentation entity.name.type punctuation.definition.bracket"],settings:{foreground:"#8BE9FD"}},{name:"JSDoc-style comment parameters",scope:["comment.block.documentation variable"],settings:{foreground:"#FFB86C",fontStyle:"italic"}},{name:"Constants",scope:["constant","variable.other.constant"],settings:{foreground:"#BD93F9"}},{name:"Constant escape sequences",scope:["constant.character.escape","constant.character.string.escape","constant.regexp"],settings:{foreground:"#FF79C6"}},{name:"HTML tags",scope:["entity.name.tag"],settings:{foreground:"#FF79C6"}},{name:"CSS attribute parent selectors ('&')",scope:["entity.other.attribute-name.parent-selector"],settings:{foreground:"#FF79C6"}},{name:"HTML/CSS attribute names",scope:["entity.other.attribute-name"],settings:{foreground:"#50FA7B",fontStyle:"italic"}},{name:"Function names",scope:["entity.name.function","meta.function-call.object","meta.function-call.php","meta.function-call.static","meta.method-call.java meta.method","meta.method.groovy","support.function.any-method.lua","keyword.operator.function.infix"],settings:{foreground:"#50FA7B"}},{name:"Function parameters",scope:["entity.name.variable.parameter","meta.at-rule.function variable","meta.at-rule.mixin variable","meta.function.arguments variable.other.php","meta.selectionset.graphql meta.arguments.graphql variable.arguments.graphql","variable.parameter"],settings:{fontStyle:"italic",foreground:"#FFB86C"}},{name:"Decorators",scope:["meta.decorator variable.other.readwrite","meta.decorator variable.other.property"],settings:{foreground:"#50FA7B",fontStyle:"italic"}},{name:"Decorator Objects",scope:["meta.decorator variable.other.object"],settings:{foreground:"#50FA7B"}},{name:"Keywords",scope:["keyword","punctuation.definition.keyword"],settings:{foreground:"#FF79C6"}},{name:'Keyword "new"',scope:["keyword.control.new","keyword.operator.new"],settings:{fontStyle:"bold"}},{name:"Generic selectors (CSS/SCSS/Less/Stylus)",scope:["meta.selector"],settings:{foreground:"#FF79C6"}},{name:"Language Built-ins",scope:["support"],settings:{fontStyle:"italic",foreground:"#8BE9FD"}},{name:"Built-in magic functions and constants",scope:["support.function.magic","support.variable","variable.other.predefined"],settings:{fontStyle:"regular",foreground:"#BD93F9"}},{name:"Built-in functions / properties",scope:["support.function","support.type.property-name"],settings:{fontStyle:"regular"}},{name:"Separators (key/value, namespace, inheritance, pointer, hash, slice, etc)",scope:["constant.other.symbol.hashkey punctuation.definition.constant.ruby","entity.other.attribute-name.placeholder punctuation","entity.other.attribute-name.pseudo-class punctuation","entity.other.attribute-name.pseudo-element punctuation","meta.group.double.toml","meta.group.toml","meta.object-binding-pattern-variable punctuation.destructuring","punctuation.colon.graphql","punctuation.definition.block.scalar.folded.yaml","punctuation.definition.block.scalar.literal.yaml","punctuation.definition.block.sequence.item.yaml","punctuation.definition.entity.other.inherited-class","punctuation.function.swift","punctuation.separator.dictionary.key-value","punctuation.separator.hash","punctuation.separator.inheritance","punctuation.separator.key-value","punctuation.separator.key-value.mapping.yaml","punctuation.separator.namespace","punctuation.separator.pointer-access","punctuation.separator.slice","string.unquoted.heredoc punctuation.definition.string","support.other.chomping-indicator.yaml","punctuation.separator.annotation"],settings:{foreground:"#FF79C6"}},{name:"Brackets, braces, parens, etc.",scope:["keyword.operator.other.powershell","keyword.other.statement-separator.powershell","meta.brace.round","meta.function-call punctuation","punctuation.definition.arguments.begin","punctuation.definition.arguments.end","punctuation.definition.entity.begin","punctuation.definition.entity.end","punctuation.definition.tag.cs","punctuation.definition.type.begin","punctuation.definition.type.end","punctuation.section.scope.begin","punctuation.section.scope.end","storage.type.generic.java","string.template meta.brace","string.template punctuation.accessor"],settings:{foreground:"#F8F8F2"}},{name:"Variable interpolation operators",scope:["meta.string-contents.quoted.double punctuation.definition.variable","punctuation.definition.interpolation.begin","punctuation.definition.interpolation.end","punctuation.definition.template-expression.begin","punctuation.definition.template-expression.end","punctuation.section.embedded.begin","punctuation.section.embedded.coffee","punctuation.section.embedded.end","punctuation.section.embedded.end source.php","punctuation.section.embedded.end source.ruby","punctuation.definition.variable.makefile"],settings:{foreground:"#FF79C6"}},{name:"Keys (serializable languages)",scope:["entity.name.function.target.makefile","entity.name.section.toml","entity.name.tag.yaml","variable.other.key.toml"],settings:{foreground:"#8BE9FD"}},{name:"Dates / timestamps (serializable languages)",scope:["constant.other.date","constant.other.timestamp"],settings:{foreground:"#FFB86C"}},{name:"YAML aliases",scope:["variable.other.alias.yaml"],settings:{fontStyle:"italic underline",foreground:"#50FA7B"}},{name:"Storage",scope:["storage","meta.implementation storage.type.objc","meta.interface-or-protocol storage.type.objc","source.groovy storage.type.def"],settings:{fontStyle:"regular",foreground:"#FF79C6"}},{name:"Types",scope:["entity.name.type","keyword.primitive-datatypes.swift","keyword.type.cs","meta.protocol-list.objc","meta.return-type.objc","source.go storage.type","source.groovy storage.type","source.java storage.type","source.powershell entity.other.attribute-name","storage.class.std.rust","storage.type.attribute.swift","storage.type.c","storage.type.core.rust","storage.type.cs","storage.type.groovy","storage.type.objc","storage.type.php","storage.type.haskell","storage.type.ocaml"],settings:{fontStyle:"italic",foreground:"#8BE9FD"}},{name:"Generics, templates, and mapped type declarations",scope:["entity.name.type.type-parameter","meta.indexer.mappedtype.declaration entity.name.type","meta.type.parameters entity.name.type"],settings:{foreground:"#FFB86C"}},{name:"Modifiers",scope:["storage.modifier"],settings:{foreground:"#FF79C6"}},{name:"RegExp string",scope:["string.regexp","constant.other.character-class.set.regexp","constant.character.escape.backslash.regexp"],settings:{foreground:"#F1FA8C"}},{name:"Non-capture operators",scope:["punctuation.definition.group.capture.regexp"],settings:{foreground:"#FF79C6"}},{name:"RegExp start and end characters",scope:["string.regexp punctuation.definition.string.begin","string.regexp punctuation.definition.string.end"],settings:{foreground:"#FF5555"}},{name:"Character group",scope:["punctuation.definition.character-class.regexp"],settings:{foreground:"#8BE9FD"}},{name:"Capture groups",scope:["punctuation.definition.group.regexp"],settings:{foreground:"#FFB86C"}},{name:"Assertion operators",scope:["punctuation.definition.group.assertion.regexp","keyword.operator.negation.regexp"],settings:{foreground:"#FF5555"}},{name:"Positive lookaheads",scope:["meta.assertion.look-ahead.regexp"],settings:{foreground:"#50FA7B"}},{name:"Strings",scope:["string"],settings:{foreground:"#F1FA8C"}},{name:"String quotes (temporary vscode fix)",scope:["punctuation.definition.string.begin","punctuation.definition.string.end"],settings:{foreground:"#E9F284"}},{name:"Property quotes (temporary vscode fix)",scope:["punctuation.support.type.property-name.begin","punctuation.support.type.property-name.end"],settings:{foreground:"#8BE9FE"}},{name:"Docstrings",scope:["string.quoted.docstring.multi","string.quoted.docstring.multi.python punctuation.definition.string.begin","string.quoted.docstring.multi.python punctuation.definition.string.end","string.quoted.docstring.multi.python constant.character.escape"],settings:{foreground:"#6272A4"}},{name:"Variables and object properties",scope:["variable","constant.other.key.perl","support.variable.property","variable.other.constant.js","variable.other.constant.ts","variable.other.constant.tsx"],settings:{foreground:"#F8F8F2"}},{name:"Destructuring / aliasing reference name (LHS)",scope:["meta.import variable.other.readwrite","meta.object-binding-pattern-variable variable.object.property","meta.variable.assignment.destructured.object.coffee variable"],settings:{fontStyle:"italic",foreground:"#FFB86C"}},{name:"Destructuring / aliasing variable name (RHS)",scope:["meta.import variable.other.readwrite.alias","meta.export variable.other.readwrite.alias","meta.variable.assignment.destructured.object.coffee variable variable"],settings:{fontStyle:"normal",foreground:"#F8F8F2"}},{name:"GraphQL keys",scope:["meta.selectionset.graphql variable"],settings:{foreground:"#F1FA8C"}},{name:"GraphQL function arguments",scope:["meta.selectionset.graphql meta.arguments variable"],settings:{foreground:"#F8F8F2"}},{name:"GraphQL fragment name (definition)",scope:["entity.name.fragment.graphql","variable.fragment.graphql"],settings:{foreground:"#8BE9FD"}},{name:"Edge cases (foreground color resets)",scope:["constant.other.symbol.hashkey.ruby","keyword.operator.dereference.java","keyword.operator.navigation.groovy","meta.scope.for-loop.shell punctuation.definition.string.begin","meta.scope.for-loop.shell punctuation.definition.string.end","meta.scope.for-loop.shell string","storage.modifier.import","punctuation.section.embedded.begin.tsx","punctuation.section.embedded.end.tsx","punctuation.section.embedded.begin.jsx","punctuation.section.embedded.end.jsx","punctuation.separator.list.comma.css","constant.language.empty-list.haskell"],settings:{foreground:"#F8F8F2"}},{name:'Shell variables prefixed with "$" (edge case)',scope:["source.shell variable.other"],settings:{foreground:"#BD93F9"}},{name:"Powershell constants mistakenly scoped to `support`, rather than `constant` (edge)",scope:["support.constant"],settings:{fontStyle:"normal",foreground:"#BD93F9"}},{name:"Makefile prerequisite names",scope:["meta.scope.prerequisites.makefile"],settings:{foreground:"#F1FA8C"}},{name:"SCSS attibute selector strings",scope:["meta.attribute-selector.scss"],settings:{foreground:"#F1FA8C"}},{name:"SCSS attribute selector brackets",scope:["punctuation.definition.attribute-selector.end.bracket.square.scss","punctuation.definition.attribute-selector.begin.bracket.square.scss"],settings:{foreground:"#F8F8F2"}},{name:"Haskell Pragmas",scope:["meta.preprocessor.haskell"],settings:{foreground:"#6272A4"}},{name:"Log file error",scope:["log.error"],settings:{foreground:"#FF5555",fontStyle:"bold"}},{name:"Log file warning",scope:["log.warning"],settings:{foreground:"#F1FA8C",fontStyle:"bold"}}]},autoImport:!0,skipLanguages:[],filepath:"/Users/sshubam/website/website/pages/blog/scalable-apis-with-graphql-server-codegen-preset.mdx"};function g(e){let t=Object.assign({p:"p",h2:"h2",h3:"h3",code:"code",a:"a",ul:"ul",li:"li",h4:"h4",strong:"strong"},(0,i.ah)(),e.components);return c||h("CH",!1),c.Code||h("CH.Code",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"A GraphQL server is usually a central system where teams need to be able to develop features whilst\nnot blocking other teams. Each team can have varied standards and practices. So, if the GraphQL\nserver is not set up in a structure to allow concurrent contribution, development slows down, and\nmore time is spent on admin tasks rather than delivering new features."}),"\n",(0,r.jsx)(t.p,{children:"This blog post explores some of the common problems GraphQL servers encounter at scale and\nrecommends how to solve them."}),"\n",(0,r.jsx)(t.h2,{id:"the-easy-problem-code-ownership",children:"The Easy Problem: Code Ownership"}),"\n",(0,r.jsx)(t.h3,{id:"problem-how-to-manage-code-ownership",children:"Problem: How to Manage Code Ownership?"}),"\n",(0,r.jsx)(t.p,{children:"Sharing a single codebase across many teams without clear structure and guidelines is a recipe for\ndisaster. The first team in the codebase usually establishes a structure that works for them. When a\nsecond team joins, they most likely follow the structure already there. The same story happens for\nevery team thereafter. After a few more rounds, development slows down. One may review the structure\nand find themselves staring down a codebase structured by one team, for one team."}),"\n",(0,r.jsx)(t.p,{children:"Teams want their members to be notified of changes related to their domain, but not every Pull\nRequest (PR). If you were ever notified of a change unrelated to your team, chances are the codebase\nneeds to be set up to support many teams working on it."}),"\n",(0,r.jsxs)(t.p,{children:["In the example below, Team A is the first to set up the server. They manage ",(0,r.jsx)(t.code,{children:"User"})," and ",(0,r.jsx)(t.code,{children:"Auth"}),"\ndomains, so they create ",(0,r.jsx)(t.code,{children:"datasources"})," and ",(0,r.jsx)(t.code,{children:"resolvers"})," folders for these files:"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── datasources/",props:{}}]},{tokens:[{content:"│   │   │   ├── UserDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   ├── AuthDatasource.python",props:{}}]},{tokens:[{content:"│   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   ├── userResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── authResolvers.python",props:{}}]},{tokens:[{content:"│   │   ├── userSchema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── authSchema.graphql",props:{}}]},{tokens:[{content:"│   ├── server.python",props:{}}]},{tokens:[{content:"│   ├── codegen.yml",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["Then, Team B comes into the codebase. They manage ",(0,r.jsx)(t.code,{children:"Book"})," domain, so they add their files following\nthe same structure:"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── datasources/",props:{}}]},{tokens:[{content:"│   │   │   ├── UserDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   ├── AuthDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   ├── BookDatasource.python",props:{}}]},{tokens:[{content:"│   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   ├── userResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── authResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── bookResolvers.python",props:{}}]},{tokens:[{content:"│   │   ├── userSchema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── authSchema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── bookSchema.graphql",props:{}}]},{tokens:[{content:"│   ├── server.python",props:{}}]},{tokens:[{content:"│   ├── codegen.yml",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["While this works at a small scale with low communication overhead, it cannot scale. When there are\ntens or hundreds of datasources and resolvers, it would be hard to know who owns what. A simple\nsolution is to assign files to owners using GitHub's CODEOWNERS or similar features. But it has to\nbe done on every file because files are split into category folders, e.g. ",(0,r.jsx)(t.code,{children:"resolvers"}),",\n",(0,r.jsx)(t.code,{children:"datasources"}),", etc."]}),"\n",(0,r.jsx)(t.p,{children:"It is tempting to split this structure up into folders, each named after the team that manages it:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── TeamA/  # Team A notified (by CODEOWNERS) if changes happen in this folder",props:{}}]},{tokens:[{content:"│   │   │   ├── datasources/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── UserDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   │   ├── AuthDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── userResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   │   ├── authResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── userSchema.graphql",props:{}}]},{tokens:[{content:"│   │   │   ├── authSchema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── TeamB/  # Team B notified (by CODEOWNERS) if changes happen in this folder",props:{}}]},{tokens:[{content:"│   │   │   ├── datasources/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── BookDatasource.python",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── bookResolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── bookSchema.graphql",props:{}}]},{tokens:[{content:"│   ├── server.python",props:{}}]},{tokens:[{content:"│   ├── codegen.yml",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"This is already a significant improvement as ownership is defined, but organisational problems\nremain. For example, what happens when Team A changes what they own, splits into smaller teams or\nchanges its name? All these scenarios need admin work: renaming the folder in the best case and\nmoving files around in the worst. Admin work like this creates no value for end users."}),"\n",(0,r.jsxs)(t.p,{children:["On top of that, all datasources and resolvers must be put together into the GraphQL server. It is\nthe ",(0,r.jsx)(t.code,{children:"server.python"})," file in this example. Who owns this file and other server maintenance such as\npackage updates, security patches, ",(0,r.jsx)(t.code,{children:"codegen.yml"})," etc.?"]}),"\n",(0,r.jsx)(t.h3,{id:"solution-split-into-modules",children:"Solution: Split into Modules"}),"\n",(0,r.jsx)(t.p,{children:"It is common to see teams change their name, divide as teams scale, or combine as structure and\npriorities change. Yet, the thing that generally remains stable over long periods is the business\ndomain. If we split our schema based on the business domain and assign teams accordingly, it becomes\nmuch more scalable. If a team needs to hand over a domain to another team, they only need to update\nthe CODEOWNERS file."}),"\n",(0,r.jsx)(t.p,{children:"It is best to have a small group of dedicated maintainers for server maintenance. This could consist\nof one member from each team in the codebase, and its membership can rotate. Alternatively, some\ncompanies may choose to assign this responsibility to a dedicated team. Having a dedicated group -\nlet's call them the Maintainers - helps reduce noise and cognitive load for the rest of the teams,\nallowing them to focus on delivering features."}),"\n",(0,r.jsxs)(t.p,{children:["Using the same example before, we can identify 3 main domains: ",(0,r.jsx)(t.code,{children:"User"}),", ",(0,r.jsx)(t.code,{children:"Auth"})," and ",(0,r.jsx)(t.code,{children:"Book"}),", each\nhaving CODEOWNERS set up to notify appropriate teams of changes. The Maintainers own ",(0,r.jsx)(t.code,{children:"server.python"})," and\nother configs like ",(0,r.jsx)(t.code,{children:"codegen.yml"})," (We all use\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/codegen",children:"GraphQL Codegen"}),", right? \uD83D\uDE09)."]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── user/                      # Team A notified if changed",props:{}}]},{tokens:[{content:"│   │   │   ├── datasources.python",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── auth/                      # Team A notified if changed",props:{}}]},{tokens:[{content:"│   │   │   ├── datasources.python",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── book/                      # Team B notified if changed",props:{}}]},{tokens:[{content:"│   │   │   ├── datasources.python",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers.python",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   ├── server.python                      # Maintainers notified if changed",props:{}}]},{tokens:[{content:"│   ├── codegen.yml                    # Maintainers notified if changed",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsx)(t.h2,{id:"the-hard-problem-best-practice-alignment-at-scale",children:"The Hard Problem: Best Practice Alignment at Scale"}),"\n",(0,r.jsx)(t.p,{children:"Splitting schema into modules is usually easy to get teams to agree on. Then we start to see the\nhard problems: how to enforce best practices to the teams while reducing the time Maintainers need\nto spend on server maintenance."}),"\n",(0,r.jsx)(t.h3,{id:"1-how-to-enforce-best-practices-for-all-teams",children:"1. How to Enforce Best Practices for All Teams"}),"\n",(0,r.jsx)(t.p,{children:"Bad practices and conventions spread like bushfire on a hot summer day in Australia; it is the\nworst! I used to be part of a Maintainers team. We had guidelines on various topics, one being\nresolver naming convention. On one occasion, a developer incorrectly used pascal case instead of\ncamel case. The following day I woke up with more than half of the resolvers in pascal case. \uD83D\uDE31"}),"\n",(0,r.jsx)(t.p,{children:"OK, I am exaggerating here, but the experience was very traumatising."}),"\n",(0,r.jsx)(t.p,{children:"Guidelines are only good if people follow them. Standards start to slip without explicit and\nautomatic enforcement, and bad practices begin to spread."}),"\n",(0,r.jsx)(t.p,{children:"We need automated tools to enforce guidelines effectively. Luckily, these days we have an extensive\nrange of tools to help with GraphQL server best practices:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/codegen",children:"GraphQL Codegen"})," with\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/codegen/plugins/typescript/typescript",children:"typescript"})," and\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/codegen/plugins/typescript/typescript-resolvers",children:"typescript-resolvers"}),"\nplugins for type-safe GraphQL server development in TypeScript"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://github.com/B2o5T/graphql-eslint",children:"GraphQL ESLint"})," for validation, linting, and checking\nfor best practices and conventions (like all resolvers must be camel case!!! \uD83D\uDC80)."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"However, there are areas to improve."}),"\n",(0,r.jsx)(t.p,{children:"For example, the guideline for one of the GraphQL servers I am working on is to use generated types\nfrom GraphQL Codegen. Some team members, particularly those new to the codebase, may have yet to be\naware of this. Luckily, other team members or the Maintainers catch these issues at PR review time.\nBut it would save everyone time and effort if we had tools to enforce this guideline automatically."}),"\n",(0,r.jsx)(t.h3,{id:"2-how-to-minimise-noise-to-the-maintainers",children:"2. How to Minimise Noise to the Maintainers"}),"\n",(0,r.jsx)(t.p,{children:"Maintainers usually need to manage these aspects of a GraphQL server:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Core server logic: resolver map, schemas, CI/CD, etc."}),"\n",(0,r.jsxs)(t.li,{children:["Config files: ",(0,r.jsx)(t.code,{children:".graphqlrc"}),", ",(0,r.jsx)(t.code,{children:"codegen.yml"}),", etc."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Changing anything in the Maintainers' domain should notify them. Unfortunately, this happens\nregularly in routine workflows. Maintainers also have their team's work and general package and\nsecurity updates to worry about. So, being notified of unrelated PRs quickly leads to burnout."}),"\n",(0,r.jsxs)(t.p,{children:["For example, if a new resolver is added, it must be manually added to the resolver map. So,\nMaintainers are notified of every new resolver. It may look like this if you are using\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/yoga-server",children:"GraphQL Yoga"}),":"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" server.python (managed by the Maintainers)",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { createServer } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"node:http",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { createSchema, createYoga } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"graphql-yoga",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { Auth } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:"./schema/auth/resolvers",props:{style:{color:"#F1FA8C"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:";",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { book, Book } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:"./schema/auth/resolvers",props:{style:{color:"#F1FA8C"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:";",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { user, User } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:"./schema/user/resolvers",props:{style:{color:"#F1FA8C"}}},{content:'"',props:{style:{color:"#E9F284"}}},{content:";",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"const schema ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" createSchema({",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  typeDefs: ",props:{style:{color:"#F8F8F2"}}},{content:"`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:"...",props:{style:{color:"#BD93F9",fontStyle:"italic",textDecoration:"underline"}}},{content:"`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:",",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  resolvers: { ",props:{style:{color:"#F8F8F2"}}},{content:"//",props:{style:{color:"#FF79C6"}}},{content:" This ",props:{style:{color:"#F8F8F2"}}},{content:"is",props:{style:{color:"#FF79C6"}}},{content:" the resolver ",props:{style:{color:"#F8F8F2"}}},{content:"map",props:{style:{color:"#8BE9FD"}}}]},{tokens:[{content:"    Query: {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"      user,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"      book,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    },",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    Auth,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    Book",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    User,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  }",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"})",props:{style:{color:"#F8F8F2"}}},{content:";",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"const yoga ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" createYoga({ schema })",props:{style:{color:"#F8F8F2"}}},{content:";",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}}]},{tokens:[{content:"const server ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" createServer(yoga)",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"server.listen(",props:{style:{color:"#F8F8F2"}}},{content:"4000",props:{style:{color:"#BD93F9"}}},{content:", () ",props:{style:{color:"#F8F8F2"}}},{content:"=>",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  console.info(",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"Server is running on http://localhost:4000/graphql",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:")",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"})",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["There is a way to mitigate this issue: each schema module exports an object of resolvers, and they\nare passed into ",(0,r.jsx)(t.code,{children:"resolvers"})," as an array. Internally, the resolvers are merged using\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/tools/docs/schema-merging#merging-resolvers",children:"mergeResolvers from @graphql-tools/merge"}),".\nThis means the Maintainers are notified on every new module instead of every new resolver:"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" server.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { createServer } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"node:http",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { createSchema, createYoga } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"graphql-yoga",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"*",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" authResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./schema/auth/resolvers",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"*",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" bookResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./schema/book/resolvers",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"*",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" userResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./schema/user/resolvers",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"const schema ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" createSchema({",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  typeDefs: ",props:{style:{color:"#F8F8F2"}}},{content:"`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:"...",props:{style:{color:"#BD93F9",fontStyle:"italic",textDecoration:"underline"}}},{content:"`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:",",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  resolvers: [",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    ",props:{style:{color:"#F8F8F2"}}},{content:"//",props:{style:{color:"#FF79C6"}}},{content:" mergeResolvers are called internally",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    authResolvers,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    bookResolvers,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    userResolvers",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ]",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"})",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" rest of server config",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["However, ",(0,r.jsx)(t.code,{children:"mergeResolvers"})," has a caveat: it is simply merging plain JavaScript objects at runtime.\nThus, there is a risk of someone accidentally overriding others' resolvers. This issue is hard to\nfind in large codebases with hundreds of resolvers and modules."]}),"\n",(0,r.jsx)("img",{alt:"mergeResolvers can accidentally override resolvers if there are conflicts in resolver names",src:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/merge-resolvers.gif",style:{width:"80%",margin:"0 auto"}}),"\n",(0,r.jsxs)(t.p,{children:["Another commonly used feature is\n",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/codegen/plugins/typescript/typescript-resolvers#mappers",children:"mappers"}),".\nThis feature allows resolvers to return custom mapper objects instead of GraphQL output types."]}),"\n",(0,r.jsxs)(t.p,{children:["The problem with mappers is that we need to update ",(0,r.jsx)(t.code,{children:"codegen.yml"})," every time we need to create one:"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"# codegen.yml",props:{style:{color:"#6272A4"}}}]},{tokens:[{content:"generates",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"src/schema/types.generated.python",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"    ",props:{style:{color:"#F8F8F2"}}},{content:"plugins",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"      ",props:{style:{color:"#F8F8F2"}}},{content:"-",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"typescript",props:{style:{color:"#F1FA8C"}}}]},{tokens:[{content:"      ",props:{style:{color:"#F8F8F2"}}},{content:"-",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"typescript-resolvers",props:{style:{color:"#F1FA8C"}}}]},{tokens:[{content:"    ",props:{style:{color:"#F8F8F2"}}},{content:"mappers",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"      ",props:{style:{color:"#F8F8F2"}}},{content:"User",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./mappers#UserMapper",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"      ",props:{style:{color:"#F8F8F2"}}},{content:"Profile",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./mappers#ProfileMapper",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"      ",props:{style:{color:"#F8F8F2"}}},{content:"# Add another line for each mapper",props:{style:{color:"#6272A4"}}}]}],lang:"yaml"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["This is a problem for the Maintainers because these changes are based on team requirements. Whether\na team uses mappers or not is the team's choice and should not concern the Maintainers. Yet, the\nMaintainers are notified because they own the ",(0,r.jsx)(t.code,{children:"codegen.yml"})," file."]}),"\n",(0,r.jsx)(t.h3,{id:"solution-use-graphql-server-codegen-preset",children:"Solution: Use GraphQL Server Codegen Preset"}),"\n",(0,r.jsxs)(t.p,{children:["To solve the above problems, I am working on a codegen preset for GraphQL server:\n",(0,r.jsx)(t.a,{href:"https://www.npmjs.com/package/@eddeee888/gcg-typescript-resolver-files",children:"@eddeee888/gcg-typescript-resolver-files"}),".\nThe aim is to move from guidelines/config to conventions. All changes happen inside teams' modules,\nso feature work does not notify the Maintainer."]}),"\n",(0,r.jsx)(t.p,{children:"This works for any GraphQL server implementation, such as GraphQL Yoga, Apollo Server, etc."}),"\n",(0,r.jsx)(t.p,{children:"Here's how to get started:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"yarn ",props:{style:{color:"#F8F8F2"}}},{content:"add",props:{style:{color:"#F1FA8C"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"-D",props:{style:{color:"#BD93F9"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"@graphql-codegen/cli",props:{style:{color:"#F1FA8C"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"@eddeee888/gcg-typescript-resolver-files",props:{style:{color:"#F1FA8C"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"Then, you can add the following config:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"# codegen.yml",props:{style:{color:"#6272A4"}}}]},{tokens:[{content:"schema",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"src/**/*.graphql",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"generates",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"src/schema",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"    ",props:{style:{color:"#F8F8F2"}}},{content:"preset",props:{style:{color:"#8BE9FD"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"@eddeee888/gcg-typescript-resolver-files",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]}],lang:"yaml"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["Note that this preset includes ",(0,r.jsx)(t.code,{children:"@graphql-codegen/typescript"})," and\n",(0,r.jsx)(t.code,{children:"@graphql-codegen/typescript-resolvers"})," under the hood, so you do not have to set that up manually!"]}),"\n",(0,r.jsx)(t.p,{children:"Now, all we have to do is to set up schema modules like this:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── base/",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── user/",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── book/",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"Given the following content of schema files:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"# src/schema/base.graphql",props:{style:{color:"#6272A4"}}}]},{tokens:[{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Query",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Mutation",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"# src/schema/user.graphql",props:{style:{color:"#6272A4"}}}]},{tokens:[{content:"extend",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Query",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  user(",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#FFB86C",fontStyle:"italic"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"ID",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}},{content:")",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"User",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"User",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  id",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"ID",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"  fullName",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"String",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"# src/schema/book.graphql",props:{style:{color:"#6272A4"}}}]},{tokens:[{content:"extend",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Query",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  book(",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#FFB86C",fontStyle:"italic"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"ID",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}},{content:")",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Book",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"extend",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Mutation",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  markBookAsRead(",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#FFB86C",fontStyle:"italic"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"ID",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}},{content:")",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Book",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"type",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"Book",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  id",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"ID",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"  isbn",props:{style:{color:"#F8F8F2"}}},{content:":",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"String",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:"!",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]}],lang:"graphql"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"When we run codegen:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"yarn ",props:{style:{color:"#F8F8F2"}}},{content:"codegen",props:{style:{color:"#F1FA8C"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"We will see the following files:"}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"├── src/",props:{}}]},{tokens:[{content:"│   ├── schema/",props:{}}]},{tokens:[{content:"│   │   ├── base/",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── user/",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── Query/",props:{}}]},{tokens:[{content:"│   │   │   │   │   ├── user.python            # Generated, changes not overwritten by codegen",props:{}}]},{tokens:[{content:"│   │   │   │   ├── User.python                # Generated, changes not overwritten by codegen",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── book/",props:{}}]},{tokens:[{content:"│   │   │   ├── resolvers/",props:{}}]},{tokens:[{content:"│   │   │   │   ├── Query/",props:{}}]},{tokens:[{content:"│   │   │   │   │   ├── book.python            # Generated, changes not overwritten by codegen",props:{}}]},{tokens:[{content:"│   │   │   │   ├── Mutation/",props:{}}]},{tokens:[{content:"│   │   │   │   │   ├── markBookAsRead.python  # Generated, changes not overwritten by codegen",props:{}}]},{tokens:[{content:"│   │   │   │   ├── Book.python                # Generated, changes not overwritten by codegen",props:{}}]},{tokens:[{content:"│   │   │   ├── schema.graphql",props:{}}]},{tokens:[{content:"│   │   ├── types.generated.python             # Entirely generated by codegen",props:{}}]},{tokens:[{content:"│   │   ├── resolvers.generated.python         # Entirely generated by codegen",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,r.jsx)(t.h4,{id:"generated-files",children:"Generated Files"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Shared schema and resolver TypeScript types"}),": ",(0,r.jsx)(t.code,{children:"types.generated.python"}),". This is generated by\n",(0,r.jsx)(t.code,{children:"@graphql-codegen/typescript"})," and ",(0,r.jsx)(t.code,{children:"@graphql-codegen/typescript-resolvers"})," plugins. This can be\nignored in Git or removed from CODEOWNERS because it is entirely generated."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Resolver map"}),": ",(0,r.jsx)(t.code,{children:"resolvers.generated.python"}),". This puts all other resolvers together statically,\nready to be used by the GraphQL server. This can be ignored in Git or removed from CODEOWNERS\nbecause it is entirely generated."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" src",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"resolvers.generated.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" This file was automatically generated. ",props:{style:{color:"#F8F8F2"}}},{content:"DO",props:{style:{color:"#BD93F9"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"NOT",props:{style:{color:"#BD93F9"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"UPDATE",props:{style:{color:"#BD93F9"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"MANUALLY",props:{style:{color:"#BD93F9"}}},{content:". ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" { Resolvers } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./types.generated",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { book ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" Query_book } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./book/resolvers/Query/book",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { markBookAsRead ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" Mutation_markBookAsRead } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./book/resolvers/Mutation/markBookAsRead",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { Book } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./book/resolvers/Book",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { user ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" Query_user } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./user/resolvers/Query/user",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" { User } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./user/resolvers/User",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"export const resolvers: Resolvers ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  Query: {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    book: Query_book,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    user: Query_user",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  },",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  Mutation: {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"    markBookAsRead: Mutation_markBookAsRead",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  },",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  Book: Book,",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  User: User",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Operation resolvers"}),":","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/schema/user/resolvers/Query/user.python"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/schema/book/resolvers/Query/book.python"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/schema/book/resolvers/Mutation/book.python"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" Example: src",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"user",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"resolvers",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"Query",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"user.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" { QueryResolvers } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./../../../types.generated",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"export const user: NonNullable",props:{style:{color:"#F8F8F2"}}},{content:"<",props:{style:{color:"#FF79C6"}}},{content:"QueryResolvers[",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"user",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"]",props:{style:{color:"#F8F8F2"}}},{content:">",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"async",props:{style:{color:"#FF79C6"}}},{content:" (_parent, _arg, _ctx) ",props:{style:{color:"#F8F8F2"}}},{content:"=>",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" Implement Query.user resolver logic here ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Object type resolvers"}),":","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/schema/user/resolvers/User.python"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/schema/book/resolvers/Book.python"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" Example: src",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"user",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"resolvers",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"User.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" { UserResolvers } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./../../types.generated",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"export const User: UserResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" Implement User resolver logic here ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsx)(t.p,{children:"Resolvers are generated with developer experience in mind:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Automatically typed: you can go straight into implementing resolver logic."}),"\n",(0,r.jsxs)(t.li,{children:["Location in the schema matches the generated location on the filesystem: you can easily jump to a\nresolver file. For example, ",(0,r.jsx)(t.code,{children:"user"})," Query logic can be found in ",(0,r.jsx)(t.code,{children:"Query/user.python"}),"."]}),"\n"]}),"\n",(0,r.jsx)("img",{alt:"Search for resolver files easily because the filesystem location matches schema location",src:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/filesystem-resolvers.png"}),"\n",(0,r.jsxs)(t.p,{children:["The resolver files are not overwritten when codegen runs again. However, there are some smarts\nbuilt-in to ensure resolvers are correctly exported. For example, if we rename ",(0,r.jsx)(t.code,{children:"User"})," resolver to\n",(0,r.jsx)(t.code,{children:"WrongUser"})," in ",(0,r.jsx)(t.code,{children:"src/schema/user/resolvers/User.python"}),", and then run codegen, the file will be updated\nwith a warning:"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" Example: src",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"user",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"resolvers",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"User.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"import",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" { UserResolvers } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"./../../types.generated",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"export const WrongUser: UserResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" Implement User resolver logic here ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"WARNING",props:{style:{color:"#BD93F9"}}},{content:": The following resolver was missing ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" this file. Make sure it ",props:{style:{color:"#F8F8F2"}}},{content:"is",props:{style:{color:"#FF79C6"}}},{content:" properly implemented ",props:{style:{color:"#F8F8F2"}}},{content:"or",props:{style:{color:"#FF79C6"}}},{content:" there could be runtime errors. ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"export const User: UserResolvers ",props:{style:{color:"#F8F8F2"}}},{content:"=",props:{style:{color:"#FF79C6"}}},{content:" {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"/*",props:{style:{color:"#FF79C6"}}},{content:" Implement User resolver logic here ",props:{style:{color:"#F8F8F2"}}},{content:"*/",props:{style:{color:"#FF79C6"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["Some of these features are inspired by ",(0,r.jsx)(t.a,{href:"https://gqlgen.com/",children:"gqlgen"})," so check it out if you need a\nGolang GraphQL server implementation."]}),"\n",(0,r.jsx)(t.h4,{id:"other-graphql-types",children:"Other GraphQL Types"}),"\n",(0,r.jsx)(t.p,{children:"These other types are also supported by the preset:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Union: A file is generated for every Union type."}),"\n",(0,r.jsxs)(t.li,{children:["Scalars:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["If the Scalar name matches one in ",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/scalars",children:"graphql-scalars"}),", it\nis automatically imported from ",(0,r.jsx)(t.code,{children:"graphql-scalars"})," into the resolver map. Make sure to install it:"]}),"\n"]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"yarn ",props:{style:{color:"#F8F8F2"}}},{content:"add",props:{style:{color:"#F1FA8C"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"graphql-scalars",props:{style:{color:"#F1FA8C"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["If the Scalar name does not exist in ",(0,r.jsx)(t.code,{children:"graphql-scalars"}),", a file is generated for every Scalar\ntype."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["For other currently non-supported types, we can declare them using the ",(0,r.jsx)(t.code,{children:"externalResolvers"})," preset\nconfig."]}),"\n",(0,r.jsx)(t.h4,{id:"mappers-convention",children:"Mappers Convention"}),"\n",(0,r.jsxs)(t.p,{children:["Mappers can be added by exporting types or interfaces with ",(0,r.jsx)(t.code,{children:"Mapper"})," suffixes from ",(0,r.jsx)(t.code,{children:".mappers.python"}),"\nfiles in each module. For example, ",(0,r.jsx)(t.code,{children:"UserMapper"})," will be used as ",(0,r.jsx)(t.code,{children:"User"}),"'s mapper type."]}),"\n",(0,r.jsx)(c.Code,{codeConfig:d,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" src",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"user",props:{style:{color:"#F8F8F2"}}},{content:"/",props:{style:{color:"#FF79C6"}}},{content:"schema.mappers.python",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" This works! This will be used ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" mapper ",props:{style:{color:"#F8F8F2"}}},{content:"for",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"`User`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"object",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"export { User ",props:{style:{color:"#F8F8F2"}}},{content:"as",props:{style:{color:"#FF79C6"}}},{content:" UserMapper } ",props:{style:{color:"#F8F8F2"}}},{content:"from",props:{style:{color:"#FF79C6"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"'",props:{style:{color:"#E9F284"}}},{content:"external-module",props:{style:{color:"#F1FA8C"}}},{content:"'",props:{style:{color:"#E9F284"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" This ",props:{style:{color:"#F8F8F2"}}},{content:"1",props:{style:{color:"#BD93F9"}}},{content:" works! For ",props:{style:{color:"#F8F8F2"}}},{content:"`User1`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"object",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"export interface User1Mapper {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#8BE9FD"}}},{content:": string",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" This works ",props:{style:{color:"#F8F8F2"}}},{content:"2",props:{style:{color:"#BD93F9"}}},{content:"! For ",props:{style:{color:"#F8F8F2"}}},{content:"`User2`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"object",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"export ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" User2Mapper = { ",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#8BE9FD"}}},{content:": string }",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"//",props:{style:{color:"#FF79C6"}}},{content:" This works ",props:{style:{color:"#F8F8F2"}}},{content:"3",props:{style:{color:"#BD93F9"}}},{content:"! For ",props:{style:{color:"#F8F8F2"}}},{content:"`User3`",props:{style:{color:"#F8F8F2",fontStyle:"italic",textDecoration:"underline"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"object",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}},{content:" ",props:{style:{color:"#F8F8F2"}}},{content:"type",props:{style:{color:"#8BE9FD",fontStyle:"italic"}}}]},{tokens:[{content:"interface User3Mapper {",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"  ",props:{style:{color:"#F8F8F2"}}},{content:"id",props:{style:{color:"#8BE9FD"}}},{content:": string",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"}",props:{style:{color:"#F8F8F2"}}}]},{tokens:[{content:"export { User3Mapper }",props:{style:{color:"#F8F8F2"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,r.jsx)(t.h4,{id:"gradual-migration-supported",children:"Gradual Migration Supported"}),"\n",(0,r.jsxs)(t.p,{children:["If you have an existing codebase in a modularised structure but cannot migrate all at once, the\npreset has ",(0,r.jsx)(t.code,{children:"whitelistedModules"})," and ",(0,r.jsx)(t.code,{children:"blacklistedModules"})," options to support gradual migration."]}),"\n",(0,r.jsx)(t.h4,{id:"customisable-conventions",children:"Customisable Conventions"}),"\n",(0,r.jsxs)(t.p,{children:["All mentioned conventions are customisable! Check out the documentation for\n",(0,r.jsx)(t.a,{href:"https://github.com/eddeee888/graphql-code-generator-plugins/tree/master/packages/typescript-resolver-files",children:"more options"}),"."]}),"\n",(0,r.jsxs)(t.h3,{id:"differences-between-server-preset-and-graphql-modules",children:["Differences between Server Preset and ",(0,r.jsx)(t.code,{children:"graphql-modules"})]}),"\n",(0,r.jsxs)(t.p,{children:["So far, the preset may sound similar to ",(0,r.jsx)(t.a,{href:"https://the-guild.dev/graphql/modules",children:"graphql-modules"})," as\nthey both split schemas into modules. Yet, they solve different problems."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"graphql-modules"})," is a modularisation utility library that allows each module to maintain schema\ndefinitions and resolvers separately, whilst serving a unified schema at runtime."]}),"\n",(0,r.jsxs)(t.p,{children:["The preset focuses on conventions (such as file structures, types, integrations with other\nlibraries, etc.). However, it does not force schema modularisation upon the user. In fact, the\ndefault ",(0,r.jsx)(t.code,{children:"modules"})," mode is recommended for its scalablility and simplicity. The preset also has a\n",(0,r.jsx)(t.code,{children:"merged"})," mode to generate files in a monolithic way that may suit some teams and organisations."]}),"\n",(0,r.jsxs)(t.p,{children:["This also means there could be a mode in the preset to support ",(0,r.jsx)(t.code,{children:"graphql-modules"})," in the future."]}),"\n",(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(t.p,{children:"In this blog post, we have explored the problems likely to occur if your GraphQL server is not\nprepared for scale:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"unclear ownership"}),"\n",(0,r.jsx)(t.li,{children:"ignored best practices"}),"\n",(0,r.jsx)(t.li,{children:"noisy maintenance"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"We can solve these problems by following the outlined recommendations:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"modularise the codebase based on business domains"}),"\n",(0,r.jsxs)(t.li,{children:["use the GraphQL server codegen preset\n",(0,r.jsx)(t.a,{href:"https://www.npmjs.com/package/@eddeee888/gcg-typescript-resolver-files",children:"@eddeee888/gcg-typescript-resolver-files"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["At ",(0,r.jsx)(t.a,{href:"https://www.seek.com.au/",children:"SEEK"}),", we are experimenting with this preset and getting positive\nfeedback. ",(0,r.jsx)(t.a,{href:"https://twitter.com/eddeee888",children:"Let me know on Twitter"})," if it works for you too!"]})]})}function h(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}(0,n.j)({Content:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)},nextraLayout:s.ZP,hot:e.hot,pageOpts:{filePath:"pages/blog/scalable-apis-with-graphql-server-codegen-preset.mdx",route:"/blog/scalable-apis-with-graphql-server-codegen-preset",frontMatter:{title:"Scalable APIs with GraphQL Server Codegen Preset",authors:"eddeee888",tags:["graphql","codegen","node","server","typescript"],date:"2023-01-24T00:00:00.000Z",description:"Structuring GraphQL server the right way enables many teams to work in harmony while minimising runtime risks.",image:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/cover.png",thumbnail:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/thumbnail.png"},pageMap:[{kind:"MdxPage",name:"404",route:"/404"},{kind:"MdxPage",name:"500",route:"/500"},{kind:"Meta",data:{404:{type:"page",theme:{timestamp:!1,typesetting:"article"},title:"404"},500:{type:"page",theme:{timestamp:!1,typesetting:"article"},title:"500"},"about-us":{type:"page",theme:{typesetting:"article",timestamp:!1},title:"About Us"},blog:{type:"page",theme:{layout:"full",timestamp:!1},title:"Blog"},solutions:{type:"page",theme:{typesetting:"article",timestamp:!1},title:"Solutions"},"open-source":{type:"page",theme:{layout:"full",timestamp:!1}},logos:{type:"page",theme:{typesetting:"article",timestamp:!1},title:"Logos"},contact:{theme:{layout:"raw"}},services:{theme:{layout:"raw"},title:"Our Services"},index:{theme:{layout:"raw"},title:"GraphQL Tools"}}},{kind:"MdxPage",name:"about-us",route:"/about-us",frontMatter:{description:"Open Source developers with experience of working with the largest companies and applications. GraphQL consulting, workshops and trainings"}},{kind:"Folder",name:"blog",route:"/blog",children:[{kind:"Meta",data:{"*":{theme:{layout:"default",sidebar:!1,toc:!0,typesetting:"article",breadcrumb:!1}},"announcing-graphql-network-inspector":"Announcing GraphQL Network Inspector","graphql-cursor-pagination-with-postgresql":"GraphQL Cursor Pagination with PostgreSQL","graphql-hive-improvements-in-schema-registry":"GraphQL Hive - Improvements in Schema Registry","on-demand-shared-graphql-subscriptions-with-rxjs":"On-Demand Shared GraphQL Subscriptions with RxJS","scalable-apis-with-graphql-server-codegen-preset":"Scalable APIs with GraphQL Server Codegen Preset","build-realtime-graphql-backends-with-grafbase":"Build realtime GraphQL backends with Grafbase","graphql-eslint-3.14":"GraphQL-ESLint v3.14 - What's New?","graphqxl-language":"GraphQXL - The Missing GraphQL Language Extension?","graphql-yoga-nestjs-v9":"GraphQL Yoga NestJS integration now supports NestJS v9 and Yoga v3","graphql-yoga-v3":"Announcing GraphQL Yoga v3","announcing-free-single-sign-on-for-graphql-hive":"Announcing free SSO (Single Sign On) for GraphQL Hive","typescript-graphql-unions-types":"Getting the Best of TypeScript and GraphQL: Union Types","slack-bot-with-cloudflare":"Building Slack Bot with Cloudflare Workers","announcing-self-hosted-graphql-hive":"Announcing self-hosted GraphQL Hive","improved-security-with-graphql-armor-support-for-yoga-server-2":"Improved Security with GraphQL Armor support for Yoga Server 2","fetch-for-servers":"JavaScript runs everywhere, so should your servers - here is how","unleash-the-power-of-fragments-with-graphql-codegen":"Unleash the power of Fragments with GraphQL Codegen","houdini-and-kitql":"Bringing the best GraphQL experience to Svelte","building-graphql-servers-in-2022":"Building GraphQL Servers in 2022","announcing-graphql-hive-release":"Announcing GraphQL Hive, the complete GraphQL API manager","announcing-graphql-yoga-v2":"Announcing GraphQL Yoga 2.0!","graphql-error-handling-with-fp":"GraphQL error handling to the max","how-not-to-learn-graphql":"How not to learn GraphQL","the-anatomy-of-a-graphql-request":"The Anatomy of a GraphQL Request","caching-data-with-dataloader":"Caching data with DataLoader","graphql-authentication-with-envelop-and-auth0":"GraphQL Authentication with Envelop and Auth0","graphql-authz":"GraphQL AuthZ - GraphQL Authorization layer","graphql-code-generator-and-prisma":"GraphQL Code Generator with TypeScript and Prisma models","graphql-over-sse":"GraphQL over SSE (Server-Sent Events)","graphql-response-caching-with-envelop":"GraphQL Response Caching with Envelop","support-nodejs-esm":"What does it take to support Node.js ESM?","whats-new-in-graphql-codegen-v2":"What's new in GraphQL-Codegen v2?","swift-graphql":"SwiftGraphQL - A GraphQL client for Swift lovers.","graphql-tools-v8":"GraphQL Tools V8 - Stitch Federation Services","introducing-envelop":"Introducing Envelop - The GraphQL Plugin System","collecting-graphql-live-query-resource-identifier-with-graphql-tools":"Collecting GraphQL Live Query Resource Identifier with GraphQL Tools","graphql-with-typescript-done-right":"GraphQL with TypeScript done right","oss-contributor-workflow":"Easy Open Source - Orchestrating the Open Source Contribution Workflow","subscriptions-and-live-queries-real-time-with-graphql":"Subscriptions and Live Queries - Real Time with GraphQL","graphql-hive-preview":"GraphQL Hive - Manage Your GraphQL API Workflow","a-new-year-for-schema-stitching":"A New Year for GraphQL Schema Stitching","graphql-modules-v1":"The New GraphQL Modules","add-reactivity-to-an-existing-source":"Add reactivity to an existing source using GraphQL Mesh","graphql-deep-dive-6":"GraphQL - The Workflow","graphql-deep-dive-5":"GraphQL - The Stack -","graphql-deep-dive-4":"GraphQL - The Stack -","graphql-deep-dive-3":"GraphQL - The Stack -","graphql-deep-dive-2":"GraphQL - Use case and Architecture","graphql-deep-dive-1":"GraphQL - Diving Deep","graphql-codegen-and-apollo-client-3":"What's new with Apollo Client v3 and GraphQL Codegen","graphql-let":"graphql-let - A Webpack loader for GraphQL Code Generator","graphql-codegen-plugin-typescript-swr":"Introducing: GraphQL Codegen plugin for TypeScript & SWR!","graphql-tools-v7":"GraphQL Tools v7 delivers the next generation GraphQL API Gateway","joining-graphql-foundation":"The Guild is joining the GraphQL Foundation","whats-new-in-graphql-cli-4.1.0":"What's new in GraphQL CLI 4.1","graphql-mesh-subscriptions":"Webhooks as GraphQL Subscriptions using GraphQL Mesh","introducing-graphql-eslint":"Introducing GraphQL-ESLint!","graphql-over-websockets":"GraphQL over WebSockets","typed-document-node":"TypedDocumentNode: the next generation of GraphQL and TypeScript","migrating-from-rest":"Migrating from Schemaless REST API to GraphQL without writing any code","graphql-tools-v6":"GraphQL Tools - next generation schema stitching and new leadership","graphql-codegen-best-practices":"Integrating GraphQL Code Generator in your frontend applications","better-type-safety-for-resolvers-with-graphql-codegen":"Better Type Safety for your GraphQL resolvers with GraphQL Codegen","new-graphql-inspector":"New GraphQL Inspector and upcoming\xa0features","schema-change-notifications":"Schema Change Notifications in GraphQL Inspector","ci-ci-graphql-inspector":"Validate GraphQL Schema - Continuous Integration & Delivery\xa0Pipeline","multiple-environments-endpoints-graphql-inspector":"Multiple environments and endpoints in GraphQL Inspector","remote-control-graphql-inspector":"Enable Remote Control in GraphQL Inspector","graphql-mesh":"GraphQL Mesh - Query anything, run anywhere","react-e2e-tests-with-hooks":"How to run React E2E tests purely with hooks","graphql-cli-is-back":"GraphQL CLI is back!","graphql-config":"GraphQL Config - One configuration for all your tools","graphql-scalars":"GraphQL Scalars 1.0 is out!","coolest-underrated-design-pattern-in-react":"The coolest, most underrated design pattern in React","customizable-css-engine-in-javascript":"I wrote a customizable CSS engine in JavaScript","graphql-codegen-relay-compiler":"Optimizing Apollo Operations - GraphQL Code Generator & Relay Compiler","injectable-services-in-react":"Injectable services in React","graphql-codegen-java":"GraphQL Codegen adds new Apollo-Android and Java plugins","graphql-modules-auth":"Authentication and Authorization in GraphQL","taking-over-merge-graphql-schemas":"The Guild is taking over maintenance of merge-graphql-schemas","manage-circular-imports-hell-in-graphql-modules":"Manage Circular Imports Hell in GraphQL-Modules","how-should-you-pin-dependencies-and-why":"How should you pin dependencies and why?","graphql-stencil-apollo":"Stencil-Apollo - Stencil meets GraphQL","styled-components-encapsulation":"New encapsulation method for Styled-Components with Babel","graphql-codegen-hooks-support-react-apollo":"GraphQL Code Generator - Hooks support for React Apollo plugin","whatsapp-clone-apollo-angular-graphql-typescript-and-postgresql":"WhatsApp Clone - Angular, GraphQL, Apollo, TypeScript and PostgreSQL","whatsapp-clone-react-hooks-graphql-typescript-and-postgresql":"WhatsApp Clone - GraphQL, Apollo, TypeScript and PostgreSQL",sofa:"SOFA — The best way to REST (is GraphQL)","magical-babel-plugin-for-react-performance-boost":"Babel plugin and get a performance boost for your React components","introducing-graphql-inspector":"Introducing: GraphQL Inspector","dependency-injection-library-in-graphql-modules":"Dependency Injection in GraphQL-Modules","graphql-modules-scoped-providers":"Scoped Providers in GraphQL-Modules","modular-encapsulation-graphql-modules":"Modular Encapsulation in Large-Scale GraphQL Projects","how-brain-detects-shapes":"This is how our brain detects shapes","graphql-typescript-modules-codegen":"GraphQL TypeScript - w/ GraphQL-Modules and GraphQL-Code-Generator","improved-angular-console":"How I helped improve Angular Console","react-hooks-system":"Under the hood of React's hooks system","accountsjs-graphql-modules":"Authentication with accounts-js & GraphQL Modules","runtime-jsx":"Implementing a runtime version of JSX","graphql-modules":"GraphQL Modules  —  Feature based GraphQL Modules at scale","recursive-react-tree-component-implementation-made-easy":"Recursive React tree component implementation made easy","react-dom-event-handling-system":"Getting to know React DOM's event handling system inside out","how-i-build-babel-plugins":"This is how I build Babel plug-ins","nodes-child-process":"Getting to know Node's child_process module","react-app-out-of-a-webflow":"How to create a React app out of a Webflow project","git-rebase-not-interactive":"git rebase (not) --interactive","apollo-angular-12":"Apollo-Angular 1.2 - using GraphQL in your apps just got a lot easier!","codegen-typescript-react-apollo":"GraphQL Code Generator for Typescript React Apollo","graphql-code-generator-011":"GraphQL Code Generator v0.11","angular-cli-meteor-no-eject":"Angular CLI + Meteor — No more ejecting Webpack Configuration","connecting-react-native-and-meteor":"React Native and Meteor backend w/o any 3rd party library in 2018","meteor-with-webpack-in-2018":"Meteor with Webpack — Faster compilation and better source handling","whats-new-on-meteor-client-bundler":"Meteor Client Bundler — React Native support, handling Meteor imports","graphql-code-generator-090":"What's new in GraphQL Codegen 0.9.0","graphql-geo-strike":"Open source FPS with Apollo GraphQL — GeoStrike (Alpha)","graphql-code-generator":"Introducing GraphQL Code Generator","create-native-addon-using-c":"How to create a native add-on using C++","apollo-angular-011":"Apollo Angular Version 0.11","whatsapp-clone-with-ionic-angular-and-meteor":"Build a WhatsApp Clone with Ionic 2, Angular 2, and Meteor","graphql-as-a-best-practice-for-modern-angular-apps":"GraphQL as a best practice for modern Angular apps?","whatsapp-clone-with-meteor-and-ionic":"Build a WhatsApp clone with Meteor and Ionic — Meteor Platform version"}},{kind:"MdxPage",name:"a-new-year-for-schema-stitching",route:"/blog/a-new-year-for-schema-stitching",frontMatter:{title:"A New Year for GraphQL Schema Stitching",description:"2021 is the year to give Schema Stitching a fresh look after its recent renovation",date:"2021-01-14T00:00:00.000Z",authors:"gmac",tags:["graphql","graphql-tools","schema-stitching"],image:"https://user-images.githubusercontent.com/727224/104328926-56b0a700-54ba-11eb-9ad3-f6d2b971d55d.jpg",thumbnail:"https://user-images.githubusercontent.com/727224/104328777-29fc8f80-54ba-11eb-87d0-9982af1d8281.jpg"}},{kind:"MdxPage",name:"accountsjs-graphql-modules",route:"/blog/accountsjs-graphql-modules",frontMatter:{title:"Authentication with accounts-js & GraphQL Modules",description:"How to implement server-side using accounts-js, GraphQL-Modules and Apollo-Server",date:"2018-11-16T00:00:00.000Z",authors:"arda",tags:["graphql","graphql-modules","authentication"],image:"/medium/39e75508d22dbe737fad027dd23819b8.png"}},{kind:"MdxPage",name:"add-reactivity-to-an-existing-source",route:"/blog/add-reactivity-to-an-existing-source",frontMatter:{title:"Add reactivity to an existing source using GraphQL Mesh",authors:"jycouet",tags:["graphql","graphql-mesh","subscription"],date:"2020-12-15T00:00:00.000Z",description:"How To extend an existing endpoint with subscriptions to bring reactivity to your application.",image:"/blog-assets/add-reactivity-to-an-existing-source/PimpMyGraphQL.jpg"}},{kind:"MdxPage",name:"angular-cli-meteor-no-eject",route:"/blog/angular-cli-meteor-no-eject",frontMatter:{title:"Angular CLI + Meteor — No more ejecting Webpack Configuration",tags:["angular-meteor"],authors:"arda",date:"2018-07-13T00:00:00.000Z",description:"Angular CLI + Meteor — No more ejecting Webpack Configuration",image:"/blog-assets/angular-cli-meteor-no-eject/cover.png"}},{kind:"MdxPage",name:"announcing-free-single-sign-on-for-graphql-hive",route:"/blog/announcing-free-single-sign-on-for-graphql-hive",frontMatter:{title:"Announcing free SSO (Single Sign On) for GraphQL Hive",tags:["graphql","graphql-hive"],authors:"laurin",date:"2022-11-07T00:00:00.000Z",description:"Link your GraphQL Hive Organization to your OAuth OIDC provider of choice.",image:"/blog-assets/announcing-free-single-sign-on-for-graphql-hive/cover.png",thumbnail:"/blog-assets/announcing-free-single-sign-on-for-graphql-hive/thumbnail.png"}},{kind:"MdxPage",name:"announcing-graphql-hive-release",route:"/blog/announcing-graphql-hive-release",frontMatter:{title:"Announcing GraphQL Hive, the complete GraphQL API manager",tags:["graphql","graphql-hive"],authors:["charlypoly","arda","laurin","saihaj","kamil","dotan","uri","dimitri"],date:"2022-05-24T00:00:00.000Z",description:"We are incredibly excited to share with you today the public launch of GraphQL Hive!",image:"/blog-assets/announcing-graphql-hive/cover.png",thumbnail:"/blog-assets/announcing-graphql-hive/thumbnail.png"}},{kind:"MdxPage",name:"announcing-graphql-network-inspector",route:"/blog/announcing-graphql-network-inspector",frontMatter:{title:"Announcing GraphQL Network Inspector",tags:["graphql","graphql-network-inspector"],authors:["warrenjday"],date:"2023-02-22T00:00:00.000Z",description:"A better way to debug network traffic with GraphQL",image:"/blog-assets/announcing-graphql-network-inspector/cover.png",thumbnail:"/blog-assets/announcing-graphql-network-inspector/thumbnail.png"}},{kind:"MdxPage",name:"announcing-graphql-yoga-v2",route:"/blog/announcing-graphql-yoga-v2",frontMatter:{title:"Announcing GraphQL Yoga 2.0!",tags:["server","envelop","node","graphql"],authors:["charlypoly","arda","laurin","saihaj"],date:"2022-03-29T00:00:00.000Z",description:"Fully-featured GraphQL Server with focus on easy setup, performance and great developer experience",image:"/blog-assets/announcing-graphql-yoga-2/cover.png",thumbnail:"/blog-assets/announcing-graphql-yoga-2/thumbnail.png"}},{kind:"MdxPage",name:"announcing-self-hosted-graphql-hive",route:"/blog/announcing-self-hosted-graphql-hive",frontMatter:{title:"Announcing self-hosted GraphQL Hive",tags:["graphql","graphql-hive"],authors:["laurin"],date:"2022-10-05T00:00:00.000Z",description:"Host your own GraphQL Hive instance.",image:"/blog-assets/announcing-self-hosted-graphql-hive/cover.png",thumbnail:"/blog-assets/announcing-self-hosted-graphql-hive/thumbnail.png"}},{kind:"MdxPage",name:"apollo-angular-011",route:"/blog/apollo-angular-011",frontMatter:{title:"Apollo Angular Version 0.11",authors:"kamil",tags:["graphql","apollo-angular"],date:"2017-03-01T00:00:00.000Z",description:"New name, AoT support, TypeScript improvements, and Angular 4 readiness",image:"/medium/cc2b3a84ee2ef485ffad79881a284b9a.png"}},{kind:"MdxPage",name:"apollo-angular-12",route:"/blog/apollo-angular-12",frontMatter:{title:"Apollo-Angular 1.2 - using GraphQL in your apps just got a lot easier!",tags:["graphql","angular","apollo-angular"],authors:"kamil",date:"2018-08-21T00:00:00.000Z",description:"Check what's new in Apollo Angular and how to get the full potential benefits of using Angular + GraphQL + TypeScript combined thanks to GraphQL-Code-Generator",image:"/medium/351c722f184845c0b6f792f4da534e96.png"}},{kind:"MdxPage",name:"better-type-safety-for-resolvers-with-graphql-codegen",route:"/blog/better-type-safety-for-resolvers-with-graphql-codegen",frontMatter:{title:"Better Type Safety for your GraphQL resolvers with GraphQL Codegen",tags:["graphql","codegen","node","typescript"],authors:"dotan",date:"2020-05-17T00:00:00.000Z",description:"Type-check your resolvers' implementation in order to find issues in build-time. Simply integrate with your existing TypeScript data models and context types.",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"build-realtime-graphql-backends-with-grafbase",route:"/blog/build-realtime-graphql-backends-with-grafbase",frontMatter:{title:"Build realtime GraphQL backends with Grafbase",description:"Build collaborative, multiplayer apps faster and easier than ever with GraphQL Live Queries using Grafbase.",authors:"notrab",tags:["graphql","real-time","live-query"],date:"2023-01-17T00:00:00.000Z",image:"/blog-assets/build-realtime-graphql-backends-with-grafbase/cover.png",thumbnail:"/blog-assets/build-realtime-graphql-backends-with-grafbase/cover.png"}},{kind:"MdxPage",name:"building-graphql-servers-in-2022",route:"/blog/building-graphql-servers-in-2022",frontMatter:{title:"Building GraphQL Servers in 2022",authors:"notrab",tags:["graphql","conference","yoga"],date:"2022-06-28T00:00:00.000Z",description:"In this talk we'll learn about the tools needed to build your own GraphQL server from scratch using GraphQL Yoga.",image:"/blog-assets/building-graphql-servers-in-2022/building-graphql-servers-in-2022.png",thumbnail:"/blog-assets/building-graphql-servers-in-2022/building-graphql-servers-in-2022-thumbnail.png"}},{kind:"MdxPage",name:"caching-data-with-dataloader",route:"/blog/caching-data-with-dataloader",frontMatter:{title:"Caching data with DataLoader",authors:"giladtidhar",tags:["cache","data","server","graphql"],date:"2022-01-26T00:00:00.000Z",description:"How to use DataLoader to cache data",image:"/blog-assets/caching-data-with-dataloader/cover.png"}},{kind:"MdxPage",name:"ci-ci-graphql-inspector",route:"/blog/ci-ci-graphql-inspector",frontMatter:{title:"Validate GraphQL Schema - Continuous Integration & Delivery\xa0Pipeline",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2020-05-03T00:00:00.000Z",description:"Detect breaking changes and identify possible issues in GraphQL API with GraphQL Inspector",image:"/blog-assets/ci-ci-graphql-inspector/cover.png"}},{kind:"MdxPage",name:"codegen-typescript-react-apollo",route:"/blog/codegen-typescript-react-apollo",frontMatter:{title:"GraphQL Code Generator for Typescript React Apollo",authors:"arda",tags:["graphql","codegen","react","react-apollo","hooks"],date:"2018-08-21T00:00:00.000Z",updateDate:"2020-05-20T00:00:00.000Z",description:"Generate React Apollo Query, Mutation and Subscription components and hook. All completely typed by TypeScript.",image:"/medium/897186a7e3bfe61428b91f7f82c5b922.png"}},{kind:"MdxPage",name:"collecting-graphql-live-query-resource-identifier-with-graphql-tools",route:"/blog/collecting-graphql-live-query-resource-identifier-with-graphql-tools",frontMatter:{title:"Collecting GraphQL Live Query Resource Identifier with GraphQL Tools",tags:["graphql","graphql-tools","real-time","live-query"],authors:"laurin",date:"2021-07-01T00:00:00.000Z",description:"GraphQL Tools can help to solve a variety of problems. Lean how it can be used for live queries.",image:"/blog-assets/collecting-graphql-live-query-resource-identifier-with-graphql-tools/cover.jpg"}},{kind:"MdxPage",name:"connecting-react-native-and-meteor",route:"/blog/connecting-react-native-and-meteor",frontMatter:{title:"React Native and Meteor backend w/o any 3rd party library in 2018",tags:["react-native","meteor"],authors:"arda",date:"2018-07-13T00:00:00.000Z",description:"Introduction to new features of client bundler and React Native Meteor Polyfills including OAuth and persistent login session support etc.",image:"/blog-assets/connecting-react-native-and-meteor/cover.png"}},{kind:"MdxPage",name:"coolest-underrated-design-pattern-in-react",route:"/blog/coolest-underrated-design-pattern-in-react",frontMatter:{title:"The coolest, most underrated design pattern in React",authors:"eytan",tags:["react","child-props"],date:"2019-07-31T00:00:00.000Z",description:"The coolest, most underrated design pattern in React",image:"/medium/8da637649866c3f3ebcc4e5c90437d89.png"}},{kind:"MdxPage",name:"create-native-addon-using-c",route:"/blog/create-native-addon-using-c",frontMatter:{title:"How to create a native add-on using C++",authors:"eytan",tags:["cpp"],date:"2017-05-08T00:00:00.000Z",description:"Node.js Advanced — How to create a native add-on using C++",image:"/medium/6989c5ee48f37336c330100619adbe13.png"}},{kind:"MdxPage",name:"customizable-css-engine-in-javascript",route:"/blog/customizable-css-engine-in-javascript",frontMatter:{title:"I wrote a customizable CSS engine in JavaScript",authors:"eytan",tags:["css","javascript"],date:"2019-07-24T00:00:00.000Z",description:"I wrote a customizable CSS engine in JavaScript. Custom selectors, custom rules and custom events. You determine its behavior.",image:"/medium/9ecd4800956fc386f893c8730a0beb63.jpeg"}},{kind:"MdxPage",name:"dependency-injection-library-in-graphql-modules",route:"/blog/dependency-injection-library-in-graphql-modules",frontMatter:{title:"Dependency Injection in GraphQL-Modules",authors:"arda",tags:["di","graphql","graphql-modules"],date:"2019-01-11T00:00:00.000Z",description:"Why did we implement our own Dependency Injection library for GraphQL-Modules?",image:"/medium/783e92a762ee3c5b1580336b00f76d46.png"}},{kind:"MdxPage",name:"fetch-for-servers",route:"/blog/fetch-for-servers",frontMatter:{title:"JavaScript runs everywhere, so should your servers - here is how",tags:["fetch","whatwg","node","graphql","graphql-yoga"],authors:"arda",date:"2022-08-22T00:00:00.000Z",description:"A new way to make any Javascript server platform-agnostic.",image:"/blog-assets/fetch-for-servers/cover.png",thumbnail:"/blog-assets/fetch-for-servers/thumbnail.png"}},{kind:"MdxPage",name:"git-rebase-not-interactive",route:"/blog/git-rebase-not-interactive",frontMatter:{title:"git rebase (not) --interactive",authors:"eytan",tags:["git"],date:"2018-09-03T00:00:00.000Z",description:"How to build a Node.js script to re-write history. Pre-requisites: Familiarity with git rebase --interactive.",image:"/medium/aaf7b6a36c30ab802f51d8ecb40478e9.png"}},{kind:"MdxPage",name:"graphql-as-a-best-practice-for-modern-angular-apps",route:"/blog/graphql-as-a-best-practice-for-modern-angular-apps",frontMatter:{title:"GraphQL as a best practice for modern Angular apps?",authors:"uri",tags:["graphql","angular"],date:"2016-07-28T00:00:00.000Z",description:"In this post, I'll make the case for why Angular needs a best practice for communicating with the server, and why GraphQL should be that best practice.",image:"/medium/723af25d23534dd3f801257126be159b.png"}},{kind:"MdxPage",name:"graphql-authentication-with-envelop-and-auth0",route:"/blog/graphql-authentication-with-envelop-and-auth0",frontMatter:{title:"GraphQL Authentication with Envelop and Auth0",authors:"laurin",tags:["graphql","authentication","envelop"],date:"2021-12-19T00:00:00.000Z",description:"Learn how to quickly add authentication to you GraphQL Envelop setup with Auth0.",image:"/blog-assets/graphql-authentication-with-envelop-and-auth0/cover.jpg"}},{kind:"MdxPage",name:"graphql-authz",route:"/blog/graphql-authz",frontMatter:{title:"GraphQL AuthZ - GraphQL Authorization layer",authors:["dimatill","laurin"],tags:["graphql","authorization","graphql-authz"],date:"2021-12-19T00:00:00.000Z",description:"Flexible modern way of adding an authorization layer on top of your existing GraphQL backend systems.",image:"/blog-assets/graphql-authz/cover.jpg"}},{kind:"MdxPage",name:"graphql-cli-is-back",route:"/blog/graphql-cli-is-back",frontMatter:{title:"GraphQL CLI is back!",authors:"uri",tags:["graphql","graphql-cli"],date:"2019-10-31T00:00:00.000Z",description:"Your Swiss Army Knife for the GraphQL ecosystem. Production-ready GraphQL app in seconds.",image:"/medium/23b46179aaf5f6f3422b0ab82db7ed80.jpg"}},{kind:"MdxPage",name:"graphql-code-generator-011",route:"/blog/graphql-code-generator-011",frontMatter:{title:"GraphQL Code Generator v0.11",authors:"dotan",tags:["graphql","codegen"],date:"2018-08-21T00:00:00.000Z",description:"Generate React and Angular Apollo Components, Resolver signatures and much more!",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"graphql-code-generator-090",route:"/blog/graphql-code-generator-090",frontMatter:{title:"What's new in GraphQL Codegen 0.9.0",authors:"dotan",tags:["graphql","codegen"],date:"2018-05-07T00:00:00.000Z",description:"The GraphQL codegen library can generate any code for any language — including type definitions, data models, query builder, resolvers, ORM code, complete full stack platforms!! and any specific code for your needs.",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"graphql-code-generator-and-prisma",route:"/blog/graphql-code-generator-and-prisma",frontMatter:{title:"GraphQL Code Generator with TypeScript and Prisma models",authors:"giladtidhar",tags:["graphql","typescript","codegen","prisma"],date:"2021-12-19T00:00:00.000Z",description:"How to use Prisma models with GraphQL Code Generator",image:"/blog-assets/prisma-codegen/prismacodegen.png"}},{kind:"MdxPage",name:"graphql-code-generator",route:"/blog/graphql-code-generator",frontMatter:{title:"Introducing GraphQL Code Generator",authors:"dotan",tags:["graphql","codegen"],date:"2017-10-12T00:00:00.000Z",description:"The True GraphQL-First platform.",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"graphql-codegen-and-apollo-client-3",route:"/blog/graphql-codegen-and-apollo-client-3",frontMatter:{title:"What's new with Apollo Client v3 and GraphQL Codegen",authors:"dotan",tags:["graphql","codegen","typescript","react","angular","apollo-client"],date:"2020-11-30T00:00:00.000Z",description:"All the new features GraphQL Codegen adds to your type-system with the new Apollo Client 3.",image:"/blog-assets/graphql-code-generator/codegen-ac3.png"}},{kind:"MdxPage",name:"graphql-codegen-best-practices",route:"/blog/graphql-codegen-best-practices",frontMatter:{title:"Integrating GraphQL Code Generator in your frontend applications",authors:"dotan",tags:["graphql","codegen","typescript","react","angular"],date:"2020-05-20T00:00:00.000Z",description:"The GraphQL codegen library can generate code for multiple purposes. Make sure you get the most out of it.",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"graphql-codegen-hooks-support-react-apollo",route:"/blog/graphql-codegen-hooks-support-react-apollo",frontMatter:{title:"GraphQL Code Generator - Hooks support for React Apollo plugin",authors:"leonardo",tags:["graphql","codegen","react","react-apollo","hooks"],date:"2019-03-01T00:00:00.000Z",updateDate:"2020-05-20T00:00:00.000Z",description:"Use and generate React Hooks with Apollo and Typescript with the new version of GraphQL Code Generator.",image:"/blog-assets/graphql-codegen-hooks-support-react-apollo/cover.png"}},{kind:"MdxPage",name:"graphql-codegen-java",route:"/blog/graphql-codegen-java",frontMatter:{title:"GraphQL Codegen adds new Apollo-Android and Java plugins",authors:"dotan",tags:["graphql","codegen","apollo-android","android","java"],date:"2019-06-19T00:00:00.000Z",updateDate:"2020-05-20T00:00:00.000Z",description:"GraphQL Codegen adds a new Apollo-Android and a new Java Backend plugins!",image:"/blog-assets/graphql-codegen-java/cover.png"}},{kind:"MdxPage",name:"graphql-codegen-plugin-typescript-swr",route:"/blog/graphql-codegen-plugin-typescript-swr",frontMatter:{title:"Introducing: GraphQL Codegen plugin for TypeScript & SWR!",authors:"croutonn",tags:["graphql","codegen","typescript","react","hooks","swr"],date:"2020-11-23T00:00:00.000Z",description:"Working with GraphQL, TypeScript and SWR is now much simpler!",image:"/blog-assets/graphql-codegen-plugin-typescript-swr/codegen-swr.png"}},{kind:"MdxPage",name:"graphql-codegen-relay-compiler",route:"/blog/graphql-codegen-relay-compiler",frontMatter:{title:"Optimizing Apollo Operations - GraphQL Code Generator & Relay Compiler",authors:"laurin",tags:["graphql","codegen","relay"],date:"2019-07-15T00:00:00.000Z",description:"Optimizing your Apollo Operations with GraphQL Code Generator and the Relay Compiler.",image:"/blog-assets/graphql-codegen-relay-compiler/cover.png"}},{kind:"MdxPage",name:"graphql-config",route:"/blog/graphql-config",frontMatter:{title:"GraphQL Config - One configuration for all your tools",authors:"kamil",tags:["graphql","graphql-config"],date:"2019-10-25T00:00:00.000Z",description:"One configuration for all your tools.",image:"/medium/6acdca885a85960c4b5f3b5c2516a7be.jpg"}},{kind:"MdxPage",name:"graphql-cursor-pagination-with-postgresql",route:"/blog/graphql-cursor-pagination-with-postgresql",frontMatter:{title:"GraphQL Cursor Pagination with PostgreSQL",authors:"laurin",tags:["graphql","python","postgresql"],date:"2023-02-15T00:00:00.000Z",description:"An python based approach for understanding and implementing GraphQL Cursor Pagination.",image:"/blog-assets/graphql-cursor-pagination-with-postgresql/cover.png",thumbnail:"/blog-assets/graphql-cursor-pagination-with-postgresql/thumbnail.png"}},{kind:"MdxPage",name:"graphql-deep-dive-1",route:"/blog/graphql-deep-dive-1",frontMatter:{title:"GraphQL - Diving Deep",authors:"tvvignesh",tags:["graphql","deepdive","faq"],date:"2020-12-01T00:00:00.000Z",description:"Answering all the questions you may have about GraphQL and its ecosystem.",image:"/blog-assets/graphql-deep-dive-1/cover.png",thumbnail:"/blog-assets/graphql-deep-dive-1/cover.png"}},{kind:"MdxPage",name:"graphql-deep-dive-2",route:"/blog/graphql-deep-dive-2",frontMatter:{title:"GraphQL - Use case and Architecture",authors:"tvvignesh",tags:["graphql","deepdive","architecture"],date:"2020-12-02T00:00:00.000Z",description:"Architecting for GraphQL and its ecosystem.",image:"/blog-assets/graphql-deep-dive-2/cover.png",thumbnail:"/blog-assets/graphql-deep-dive-2/cover.png"}},{kind:"MdxPage",name:"graphql-deep-dive-3",route:"/blog/graphql-deep-dive-3",frontMatter:{title:"GraphQL - The Stack -",authors:"tvvignesh",tags:["graphql","deepdive","techstack"],date:"2020-12-03T00:00:00.000Z",description:"The GraphQL Stack - Part 1.",image:"/blog-assets/graphql-deep-dive-3/cover.png,",thumbnail:"/blog-assets/graphql-deep-dive-3/cover.png"}},{kind:"MdxPage",name:"graphql-deep-dive-4",route:"/blog/graphql-deep-dive-4",frontMatter:{title:"GraphQL - The Stack -",authors:"tvvignesh",tags:["graphql","deepdive","techstack"],date:"2020-12-04T00:00:00.000Z",description:"The GraphQL Stack - Part 2.",image:"/blog-assets/graphql-deep-dive-4/cover.png",thumbnail:"/blog-assets/graphql-deep-dive-4/cover.png"}},{kind:"MdxPage",name:"graphql-deep-dive-5",route:"/blog/graphql-deep-dive-5",frontMatter:{title:"GraphQL - The Stack -",authors:"tvvignesh",tags:["graphql","deepdive","techstack"],date:"2020-12-06T00:00:00.000Z",description:"The GraphQL Stack - Part 3.",image:"/blog-assets/graphql-deep-dive-5/cover.png",thumbnail:"/blog-assets/graphql-deep-dive-5/cover.png"}},{kind:"MdxPage",name:"graphql-deep-dive-6",route:"/blog/graphql-deep-dive-6",frontMatter:{title:"GraphQL - The Workflow",authors:"tvvignesh",tags:["graphql","deepdive","workflow"],date:"2020-12-12T00:00:00.000Z",description:"The Workflow when taking GraphQL from development to production.",image:"/blog-assets/graphql-deep-dive-6/cover.png",thumbnail:"/blog-assets/graphql-deep-dive-6/cover.png"}},{kind:"MdxPage",name:"graphql-error-handling-with-fp",route:"/blog/graphql-error-handling-with-fp",frontMatter:{title:"GraphQL error handling to the max",authors:"gthau",tags:["graphql","typescript","codegen","fp-python","error-handling","best-practices"],date:"2022-03-07T00:00:00.000Z",description:"Handle unsafe APIs in a typesafe way with Typescript and Functional Programming.",image:"/blog-assets/graphql-error-handling-with-fp/graphql-error-1024x512.png",thumbnail:"/blog-assets/graphql-error-handling-with-fp/graphql-error-1024x512.png"}},{kind:"MdxPage",name:"graphql-eslint-3.14",route:"/blog/graphql-eslint-3.14",frontMatter:{title:"GraphQL-ESLint v3.14 - What's New?",tags:["graphql","eslint","linter"],authors:"dimitri",date:"2022-12-28T00:00:00.000Z",description:"The best GraphQL linter becomes even better! Check out what we added in the new version.",image:"/blog-assets/graphql-eslint-3.14/image.png",thumbnail:"/blog-assets/graphql-eslint-3.14/thumbnail.png"}},{kind:"MdxPage",name:"graphql-geo-strike",route:"/blog/graphql-geo-strike",frontMatter:{title:"Open source FPS with Apollo GraphQL — GeoStrike (Alpha)",authors:"david",tags:["cesium","graphql","angular"],date:"2018-02-15T00:00:00.000Z",description:"A GeoReferenced Multiplayer First-Person Shooter Game.",image:"/blog-assets/graphql-geo-strike/cover.png"}},{kind:"MdxPage",name:"graphql-hive-improvements-in-schema-registry",route:"/blog/graphql-hive-improvements-in-schema-registry",frontMatter:{title:"GraphQL Hive - Improvements in Schema Registry",authors:"kamil",tags:["graphql","graphql-hive"],date:"2023-02-06T00:00:00.000Z",description:"GraphQL Hive announces new and improved schema registry model with improved workflow and user experience. Access to old model will end soon, switch recommended. New model has improved defaults and the ability to delete a schema.",image:"/blog-assets/graphql-hive/improvements-in-schema-registry/cover.png",thumbnail:"/blog-assets/graphql-hive/improvements-in-schema-registry/thumbnail.png"}},{kind:"MdxPage",name:"graphql-hive-preview",route:"/blog/graphql-hive-preview",frontMatter:{title:"GraphQL Hive - Manage Your GraphQL API Workflow",authors:"kamil",tags:["graphql","graphql-hive"],date:"2021-03-26T00:00:00.000Z",description:"Announcing the beta testing program of GraphQL Hive - schema registry for any GraphQL workflow.",image:"/blog-assets/graphql-hive/cover.png"}},{kind:"MdxPage",name:"graphql-let",route:"/blog/graphql-let",frontMatter:{title:"graphql-let - A Webpack loader for GraphQL Code Generator",authors:"soichi",tags:["graphql","codegen","webpack"],date:"2020-11-25T00:00:00.000Z",description:"graphql-let is a webpack loader of GraphQL code generator.",image:"/blog-assets/graphql-let/cover.png",thumbnail:"/blog-assets/graphql-let/cover.png"}},{kind:"MdxPage",name:"graphql-mesh-subscriptions",route:"/blog/graphql-mesh-subscriptions",frontMatter:{title:"Webhooks as GraphQL Subscriptions using GraphQL Mesh",authors:"arda",tags:["subscriptions","webhooks","graphql","mesh"],date:"2020-10-05T00:00:00.000Z",description:"Consume your legacy webhooks and subscriptions from any data source as GraphQL Subscriptions with GraphQL Mesh.",image:"/blog-assets/graphql-mesh-subscriptions/cover.png"}},{kind:"MdxPage",name:"graphql-mesh",route:"/blog/graphql-mesh",frontMatter:{title:"GraphQL Mesh - Query anything, run anywhere",authors:"uri",tags:["graphql","graphql-mesh"],date:"2020-03-23T00:00:00.000Z",description:"We are excited to announce GraphQL Mesh.",image:"/blog-assets/graphql-mesh/cover.webm",thumbnail:"/blog-assets/graphql-mesh/cover.jpg"}},{kind:"MdxPage",name:"graphql-modules-auth",route:"/blog/graphql-modules-auth",frontMatter:{title:"Authentication and Authorization in GraphQL",authors:"dotan",tags:["graphql","graphql-modules","authentication"],date:"2019-06-19T00:00:00.000Z",description:"After a few years of working with GraphQL, as open-source developers and as infrastructure team in large enterprises, we've learned some lessons about GraphQL, and how to authenticate and authorize GraphQL API.",image:"/blog-assets/graphql-modules-auth/cover.jpeg"}},{kind:"MdxPage",name:"graphql-modules-scoped-providers",route:"/blog/graphql-modules-scoped-providers",frontMatter:{title:"Scoped Providers in GraphQL-Modules",authors:"arda",tags:["graphql","graphql-modules","di"],date:"2019-01-11T00:00:00.000Z",description:"Understand how scoped providers work in GraphQL-Modules Dependency Injection.",image:"/medium/330126a7ddd518886b068e1f1e23ee41.png"}},{kind:"MdxPage",name:"graphql-modules-v1",route:"/blog/graphql-modules-v1",frontMatter:{title:"The New GraphQL Modules",authors:"kamil",tags:["graphql","graphql-modules"],date:"2020-12-21T00:00:00.000Z",description:"GraphQL Modules showed up on NPM almost 3 years ago, but now we decided to rewrite it from scratch.",image:"/blog-assets/graphql-modules-v1/cover.png"}},{kind:"MdxPage",name:"graphql-modules",route:"/blog/graphql-modules",frontMatter:{title:"GraphQL Modules  —  Feature based GraphQL Modules at scale",authors:"uri",tags:["graphql","graphql-modules"],date:"2018-11-05T00:00:00.000Z",description:"Feature based GraphQL Modules at scale.",image:"/medium/a4a2c4f56993a801a7ffe394fc0f95f1.png"}},{kind:"MdxPage",name:"graphql-over-sse",route:"/blog/graphql-over-sse",frontMatter:{title:"GraphQL over SSE (Server-Sent Events)",tags:["graphql","graphql-subscriptions"],authors:"enisdenjo",date:"2021-09-01T00:00:00.000Z",description:"Zero-dependency, HTTP/1 safe, simple, GraphQL over Server-Sent Events Protocol server and client.",image:"/blog-assets/graphql-over-sse/graphql-over-sse.jpg"}},{kind:"MdxPage",name:"graphql-over-websockets",route:"/blog/graphql-over-websockets",frontMatter:{title:"GraphQL over WebSockets",tags:["graphql","graphql-subscriptions"],authors:"enisdenjo",date:"2020-09-15T00:00:00.000Z",description:"Coherent, zero-dependency, lazy, simple, server and client implementation of the new, security first, GraphQL over WebSocket Protocol.",image:"/blog-assets/graphql-over-websockets/graphql-over-websocket.png"}},{kind:"MdxPage",name:"graphql-response-caching-with-envelop",route:"/blog/graphql-response-caching-with-envelop",frontMatter:{title:"GraphQL Response Caching with Envelop",tags:["graphql"],authors:"laurin",date:"2021-08-19T00:00:00.000Z",description:"Caching GraphQL endpoints can be tricky. Let's take a look at the theory behind making it possible and learn how to do it with Envelop.",image:"/blog-assets/graphql-response-caching-with-envelop/graphql-response-caching-with-envelop-cover.png",canonical:"https://envelop.dev/docs/guides/adding-a-graphql-response-cache"}},{kind:"MdxPage",name:"graphql-scalars",route:"/blog/graphql-scalars",frontMatter:{title:"GraphQL Scalars 1.0 is out!",authors:"arda",tags:["graphql","graphql-scalars"],date:"2019-08-08T00:00:00.000Z",description:"More Types, Data Integrity and Strict Validations on GraphQL.",image:"/medium/037668856e53c2b8a6e50ca7b886d157.jpg"}},{kind:"MdxPage",name:"graphql-stencil-apollo",route:"/blog/graphql-stencil-apollo",frontMatter:{title:"Stencil-Apollo - Stencil meets GraphQL",authors:"arda",tags:["graphql","stencil","stencil-apollo"],date:"2019-03-06T00:00:00.000Z",description:"Stencil-Apollo lets you easily use GraphQL in Web Components.",image:"/medium/de2fef916d1624b5a70599ef50687bf6.png"}},{kind:"MdxPage",name:"graphql-tools-v6",route:"/blog/graphql-tools-v6",frontMatter:{title:"GraphQL Tools - next generation schema stitching and new leadership",authors:"arda",tags:["graphql","graphql-tools","schema-first","schema-stitching"],date:"2020-05-21T00:00:00.000Z",description:"GraphQL Tools v6 with more tools, improved schema stitching and bug fixes.",image:"/blog-assets/graphql-tools-v6/cover.webm",thumbnail:"/blog-assets/graphql-tools-v6/cover.png"}},{kind:"MdxPage",name:"graphql-tools-v7",route:"/blog/graphql-tools-v7",frontMatter:{title:"GraphQL Tools v7 delivers the next generation GraphQL API Gateway",authors:"arda",tags:["graphql","graphql-tools","schema-first","schema-stitching"],date:"2020-11-03T00:00:00.000Z",description:"GraphQL Tools v7",image:"/blog-assets/graphql-tools-v6/cover.webm",thumbnail:"/blog-assets/graphql-tools-v6/cover.png"}},{kind:"MdxPage",name:"graphql-tools-v8",route:"/blog/graphql-tools-v8",frontMatter:{title:"GraphQL Tools V8 - Stitch Federation Services",authors:"arda",tags:["graphql","graphql-tools","schema-stitching","federation","relay"],date:"2021-07-28T00:00:00.000Z",description:"Faster and more flexible Schema Stitching!",image:"/blog-assets/graphql-tools-v6/cover.webm",thumbnail:"/blog-assets/graphql-tools-v6/cover.png"}},{kind:"MdxPage",name:"graphql-typescript-modules-codegen",route:"/blog/graphql-typescript-modules-codegen",frontMatter:{title:"GraphQL TypeScript - w/ GraphQL-Modules and GraphQL-Code-Generator",authors:"arda",tags:["graphql","graphql-modules","codegen","typescript"],date:"2018-12-04T00:00:00.000Z",description:"Writing a GraphQL TypeScript project w/ GraphQL-Modules and GraphQL-Code-Generator.",image:"/medium/0e0c64ec5841ba4731bddefaabbb75c8.png"}},{kind:"MdxPage",name:"graphql-with-typescript-done-right",route:"/blog/graphql-with-typescript-done-right",frontMatter:{title:"GraphQL with TypeScript done right",authors:"charlypoly",tags:["graphql","typescript","codegen","node","react"],date:"2021-04-29T00:00:00.000Z",description:"How to get the most of React application types with GraphQL Code Generator.",image:"/blog-assets/graphql-code-generator/cover.png",canonical:"https://charlypoly.com/publications/typescript-with-graphql-done-right"}},{kind:"MdxPage",name:"graphql-yoga-nestjs-v9",route:"/blog/graphql-yoga-nestjs-v9",frontMatter:{title:"GraphQL Yoga NestJS integration now supports NestJS v9 and Yoga v3",tags:["graphql","nodejs","typescript","yoga","nestjs"],authors:["enisdenjo"],date:"2022-12-06T00:00:00.000Z",description:"A new version of @graphql-yoga/nestjs with NestJS v9 support is out!",image:"/blog-assets/graphql-yoga-nest-v9/cover.png",thumbnail:"/blog-assets/graphql-yoga-nest-v9/thumbnail.png"}},{kind:"MdxPage",name:"graphql-yoga-v3",route:"/blog/graphql-yoga-v3",frontMatter:{title:"Announcing GraphQL Yoga v3",tags:["graphql","nodejs","typescript","yoga"],authors:["saihaj","arda","enisdenjo","laurin"],date:"2022-11-15T00:00:00.000Z",description:"The new version of GraphQL Yoga is out! Learn what has improved and what is new!",image:"/blog-assets/graphql-yoga-v3/cover.png",thumbnail:"/blog-assets/graphql-yoga-v3/thumbnail.png"}},{kind:"MdxPage",name:"graphqxl-language",route:"/blog/graphqxl-language",frontMatter:{title:"GraphQXL - The Missing GraphQL Language Extension?",tags:["graphql"],authors:"gabotechs",date:"2022-12-12T00:00:00.000Z",description:"GraphQXL, a new language for building big and scalable GraphQL server-side schemas",image:"/blog-assets/graphqxl-language/cover.png",thumbnail:"/blog-assets/graphqxl-language/thumbnail.png"}},{kind:"MdxPage",name:"houdini-and-kitql",route:"/blog/houdini-and-kitql",frontMatter:{title:"Bringing the best GraphQL experience to Svelte",tags:["graphql","svelte"],authors:["jycouet","AlecAivazis"],date:"2022-07-04T00:00:00.000Z",description:"It's time to unveil a massive effort by the KitQL and Houdini maintainers to join forces!",image:"/blog-assets/houdini-and-kitql/thumbnail.png",thumbnail:"/blog-assets/houdini-and-kitql/thumbnail.png"}},{kind:"MdxPage",name:"how-brain-detects-shapes",route:"/blog/how-brain-detects-shapes",frontMatter:{title:"This is how our brain detects shapes",authors:"eytan",tags:[],date:"2018-12-11T00:00:00.000Z",description:"This is how our brain detects shapes. And so shall the computer...",image:"/medium/f446050521c10447f45bc89e466b3370.webm"}},{kind:"MdxPage",name:"how-i-build-babel-plugins",route:"/blog/how-i-build-babel-plugins",frontMatter:{title:"This is how I build Babel plug-ins",authors:"eytan",tags:["javascript","babel"],date:"2018-10-08T00:00:00.000Z",description:"The basics of AOT compilers and how to write Babel plug-ins.",image:"/medium/b00e12c482b6ba2f40860ff3471bc55c.png"}},{kind:"MdxPage",name:"how-not-to-learn-graphql",route:"/blog/how-not-to-learn-graphql",frontMatter:{title:"How not to learn GraphQL",authors:"charlypoly",tags:["graphql"],date:"2022-02-14T00:00:00.000Z",description:"A guide to avoid common learning biases and misconceptions around GraphQL.",thumbnail:"/blog-assets/how-not-to-learn-graphql/preview.png",image:"/blog-assets/how-not-to-learn-graphql/cover.png"}},{kind:"MdxPage",name:"how-should-you-pin-dependencies-and-why",route:"/blog/how-should-you-pin-dependencies-and-why",frontMatter:{title:"How should you pin dependencies and why?",authors:"niccolo",tags:["javascript","node"],date:"2019-03-07T00:00:00.000Z",description:"Getting in-depth on making your application updated and safe.",image:"/blog-assets/how-should-you-pin-dependencies-and-why/cover.png"}},{kind:"MdxPage",name:"improved-angular-console",route:"/blog/improved-angular-console",frontMatter:{title:"How I helped improve Angular Console",authors:"kamil",tags:["angular","console"],date:"2018-11-30T00:00:00.000Z",description:"How I helped improve Angular Console. By doing GraphQL the right way.",image:"/medium/78d0f670476d24762cc05eefd42a0321.png"}},{kind:"MdxPage",name:"improved-security-with-graphql-armor-support-for-yoga-server-2",route:"/blog/improved-security-with-graphql-armor-support-for-yoga-server-2",frontMatter:{title:"Improved Security with GraphQL Armor support for Yoga Server 2",authors:"laurin",tags:["graphql","graphql-tools","security"],date:"2022-08-24T00:00:00.000Z",description:"Bringing security by default to GraphQL and Yoga Server.",image:"/blog-assets/improved-security-with-graphql-armor-support-for-yoga-server-2/cover.png",thumbnail:"/blog-assets/improved-security-with-graphql-armor-support-for-yoga-server-2/cover.png"}},{kind:"MdxPage",name:"injectable-services-in-react",route:"/blog/injectable-services-in-react",frontMatter:{title:"Injectable services in React",authors:"eytan",tags:["react"],date:"2019-06-24T00:00:00.000Z",description:"How they're implemented and their similarities with Angular services.",image:"/medium/59ec8df34fe4fd4bb20960e2270a12df.jpeg"}},{kind:"MdxPage",name:"introducing-envelop",route:"/blog/introducing-envelop",frontMatter:{title:"Introducing Envelop - The GraphQL Plugin System",authors:"dotan",tags:["graphql","server","node","plugins","envelop"],date:"2021-07-22T00:00:00.000Z",description:"A new tool by The Guild: A powerful new way for creating fast, modern and secure GraphQL servers.",thumbnail:"/blog-assets/envelop/envelop_cover.png",image:"/blog-assets/envelop/envelop_cover.png"}},{kind:"MdxPage",name:"introducing-graphql-eslint",route:"/blog/introducing-graphql-eslint",frontMatter:{title:"Introducing GraphQL-ESLint!",authors:"dotan",tags:["graphql","graphql-eslint","eslint"],date:"2020-10-03T00:00:00.000Z",description:"A new tool by The Guild, for making your GraphQL schema and GraphQL operations more standard and robust!",image:"https://the-guild.dev/graphql/eslint/logo.png"}},{kind:"MdxPage",name:"introducing-graphql-inspector",route:"/blog/introducing-graphql-inspector",frontMatter:{title:"Introducing: GraphQL Inspector",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2019-01-18T00:00:00.000Z",description:"Prevent breaking changes. Find broken operations. Get Schema Coverage. Check deprecated usage and type duplicates. All as part of your CI process.",image:"/medium/f2f4b5ebdecf4640a2cbc79f7560ec88.png"}},{kind:"MdxPage",name:"joining-graphql-foundation",route:"/blog/joining-graphql-foundation",frontMatter:{title:"The Guild is joining the GraphQL Foundation",authors:"uri",tags:["graphql","foundation"],date:"2020-10-30T00:00:00.000Z",description:"Our plans to contribute to the GraphQL Foundation.",image:"/blog-assets/joining-graphql-foundation/graphql-foundation-logo.png",thumbnail:"/blog-assets/joining-graphql-foundation/graphql-foundation-logo.png"}},{kind:"MdxPage",name:"magical-babel-plugin-for-react-performance-boost",route:"/blog/magical-babel-plugin-for-react-performance-boost",frontMatter:{title:"Babel plugin and get a performance boost for your React components",tags:["babel","react"],authors:"eytan",date:"2019-01-21T00:00:00.000Z",description:"Use this magical Babel plugin and get a performance boost for your React components.",image:"/medium/5f2a07bb7a73727cca4707c0e85f75e8.jpeg"}},{kind:"MdxPage",name:"manage-circular-imports-hell-in-graphql-modules",route:"/blog/manage-circular-imports-hell-in-graphql-modules",frontMatter:{title:"Manage Circular Imports Hell in GraphQL-Modules",authors:"arda",tags:["graphql","graphql-modules","di"],date:"2019-03-18T00:00:00.000Z",description:"Manage Circular Imports Hell in GraphQL-Modules.",image:"/medium/e057400fd0eccf986e581abce77dd3d5.png"}},{kind:"MdxPage",name:"meteor-with-webpack-in-2018",route:"/blog/meteor-with-webpack-in-2018",frontMatter:{title:"Meteor with Webpack — Faster compilation and better source handling",tags:["meteor","webpack"],authors:"arda",date:"2018-07-13T00:00:00.000Z",description:"Faster compilation and better source handling.",image:"/blog-assets/meteor-with-webpack-in-2018/cover.png"}},{kind:"MdxPage",name:"migrating-from-rest",route:"/blog/migrating-from-rest",frontMatter:{title:"Migrating from Schemaless REST API to GraphQL without writing any code",tags:["graphql","rest","graphql-mesh"],authors:"arda",date:"2020-05-31T00:00:00.000Z",description:"Migrating to GraphQL from a REST API has never been easier. With tools like GraphQL Mesh you can do it automatically, without writing code and even if you don't have any schema for your existing REST API sources.",image:"/blog-assets/migrating-from-rest/cover.png"}},{kind:"MdxPage",name:"modular-encapsulation-graphql-modules",route:"/blog/modular-encapsulation-graphql-modules",frontMatter:{title:"Modular Encapsulation in Large-Scale GraphQL Projects",authors:"arda",tags:["graphql","graphql-modules"],date:"2019-01-07T00:00:00.000Z",description:"Why is True Modular Encapsulation So Important in Large-Scale GraphQL Projects? — GraphQL Modules is your savior!",image:"/medium/a6fcd73268ea14133c0ec3f5cc4f0728.png"}},{kind:"MdxPage",name:"multiple-environments-endpoints-graphql-inspector",route:"/blog/multiple-environments-endpoints-graphql-inspector",frontMatter:{title:"Multiple environments and endpoints in GraphQL Inspector",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2020-05-02T00:00:00.000Z",description:"Use different variants of GraphQL schema.  Live and running GraphQL API as the source of truth of a\xa0schema.",image:"/blog-assets/multiple-environments-endpoints-graphql-inspector/cover.png"}},{kind:"MdxPage",name:"new-graphql-inspector",route:"/blog/new-graphql-inspector",frontMatter:{title:"New GraphQL Inspector and upcoming\xa0features",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2020-05-05T00:00:00.000Z",description:"See what's new and shape the future of GraphQL Inspector together! It's entirely open-sourced!",image:"/blog-assets/new-graphql-inspector/cover.png"}},{kind:"MdxPage",name:"nodes-child-process",route:"/blog/nodes-child-process",frontMatter:{title:"Getting to know Node's child_process module",authors:"eytan",tags:["node"],date:"2018-09-27T00:00:00.000Z",description:"How to call git, cpp, sh, etc., from a Node.js script.",image:"/medium/8e3e63cb7dfad3159760903440eb32fd.png"}},{kind:"MdxPage",name:"on-demand-shared-graphql-subscriptions-with-rxjs",route:"/blog/on-demand-shared-graphql-subscriptions-with-rxjs",frontMatter:{title:"On-Demand Shared GraphQL Subscriptions with RxJS",authors:"gthau",tags:["graphql","subscriptions","typescript","rxjs"],date:"2023-01-27T00:00:00.000Z",description:"Trigger on-demand expensive subscriptions and share results between multiple subscribers",image:"/blog-assets/on-demand-shared-graphql-subscriptions-with-rxjs/cover.png",thumbnail:"/blog-assets/on-demand-shared-graphql-subscriptions-with-rxjs/thumbnail.png"}},{kind:"MdxPage",name:"oss-contributor-workflow",route:"/blog/oss-contributor-workflow",frontMatter:{title:"Easy Open Source - Orchestrating the Open Source Contribution Workflow",authors:"tvvignesh",tags:["open source","contributor","workflow"],date:"2021-04-22T00:00:00.000Z",description:"Sharing our journey of making it easier for people to participate in Open Source.",image:"/blog-assets/oss-contributor-workflow/cover.png",thumbnail:"/blog-assets/oss-contributor-workflow/cover.png"}},{kind:"MdxPage",name:"react-app-out-of-a-webflow",route:"/blog/react-app-out-of-a-webflow",frontMatter:{title:"How to create a React app out of a Webflow project",authors:"eytan",tags:["react","webflow"],date:"2018-09-07T00:00:00.000Z",description:"How to create a React app out of a Webflow project.",image:"/medium/50ea860594889aa4f1b96a509c886b9c.jpg"}},{kind:"MdxPage",name:"react-dom-event-handling-system",route:"/blog/react-dom-event-handling-system",frontMatter:{title:"Getting to know React DOM's event handling system inside out",authors:"eytan",tags:["react","dom"],date:"2018-10-22T00:00:00.000Z",description:"Getting to know React DOM's event handling system inside out.",image:"/medium/dff8edec78c39a832292c7435ee1213b.png"}},{kind:"MdxPage",name:"react-e2e-tests-with-hooks",route:"/blog/react-e2e-tests-with-hooks",frontMatter:{title:"How to run React E2E tests purely with hooks",authors:"eytan",tags:["react"],date:"2020-02-10T00:00:00.000Z",description:"How to run React E2E tests purely with hooks. Tested with React-Native and Firebase Test Lab.",image:"/medium/aa57af3e7221a72b87255d47a28c595c.png"}},{kind:"MdxPage",name:"react-hooks-system",route:"/blog/react-hooks-system",frontMatter:{title:"Under the hood of React's hooks system",authors:"eytan",tags:["react"],date:"2018-11-21T00:00:00.000Z",description:"Looking at the implementation and getting to know it inside out.",image:"/medium/923d5b18cf82df80927ee5278f7048ff.jpeg"}},{kind:"MdxPage",name:"recursive-react-tree-component-implementation-made-easy",route:"/blog/recursive-react-tree-component-implementation-made-easy",frontMatter:{title:"Recursive React tree component implementation made easy",authors:"eytan",tags:["react"],date:"2018-11-05T00:00:00.000Z",description:"The challenges that I've faced and how I solved them.",image:"/medium/db6c7817bbaf73790065c3e1f8ebb835.png"}},{kind:"MdxPage",name:"remote-control-graphql-inspector",route:"/blog/remote-control-graphql-inspector",frontMatter:{title:"Enable Remote Control in GraphQL Inspector",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2020-05-01T00:00:00.000Z",description:"Intercept schema changes via HTTP and decide which changes are acceptable which are not and all of this through a serverless function.",image:"/blog-assets/remote-control-graphql-inspector/cover.png"}},{kind:"MdxPage",name:"runtime-jsx",route:"/blog/runtime-jsx",frontMatter:{title:"Implementing a runtime version of JSX",authors:"eytan",tags:["react"],date:"2018-11-12T00:00:00.000Z",description:"Learning how to think like a JSX parser and building an AST",image:"/medium/fadbe31be89eb8b0be9fc5f035c9617d.png"}},{kind:"MdxPage",name:"scalable-apis-with-graphql-server-codegen-preset",route:"/blog/scalable-apis-with-graphql-server-codegen-preset",frontMatter:{title:"Scalable APIs with GraphQL Server Codegen Preset",authors:"eddeee888",tags:["graphql","codegen","node","server","typescript"],date:"2023-01-24T00:00:00.000Z",description:"Structuring GraphQL server the right way enables many teams to work in harmony while minimising runtime risks.",image:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/cover.png",thumbnail:"/blog-assets/scalable-apis-with-graphql-server-codegen-preset/thumbnail.png"}},{kind:"MdxPage",name:"schema-change-notifications",route:"/blog/schema-change-notifications",frontMatter:{title:"Schema Change Notifications in GraphQL Inspector",authors:"kamil",tags:["graphql","graphql-inspector"],date:"2020-05-04T00:00:00.000Z",description:"Stay up to date with changes in your GraphQL Schema. Receive notifications on Slack, Discord or even via WebHooks.",image:"/blog-assets/schema-change-notifications/cover.png"}},{kind:"MdxPage",name:"slack-bot-with-cloudflare",route:"/blog/slack-bot-with-cloudflare",frontMatter:{title:"Building Slack Bot with Cloudflare Workers",authors:"tuvalSimha",tags:["graphql","codegen"],date:"2022-10-12T00:00:00.000Z",description:"GitHub Slack bot reminder in Cloudflare Workers",image:"/blog-assets/slack-bot-with-cloudflare/cover.png",thumbnail:"/blog-assets/slack-bot-with-cloudflare/thumbnail.png"}},{kind:"MdxPage",name:"sofa",route:"/blog/sofa",frontMatter:{title:"SOFA — The best way to REST (is GraphQL)",authors:"uri",tags:["graphql","rest","sofa"],date:"2019-01-25T00:00:00.000Z",description:"Ending the REST vs. GraphQL debate once and for all",image:"/blog-assets/sofa/cover.webm",thumbnail:"/blog-assets/sofa/cover.jpg"}},{kind:"MdxPage",name:"styled-components-encapsulation",route:"/blog/styled-components-encapsulation",frontMatter:{title:"New encapsulation method for Styled-Components with Babel",tags:["react","babel","css"],authors:"eytan",date:"2019-03-04T00:00:00.000Z",description:"Use private class names instead of a dedicated component",image:"/medium/847a27410df9de57458f3736cf937b9b.png"}},{kind:"MdxPage",name:"subscriptions-and-live-queries-real-time-with-graphql",route:"/blog/subscriptions-and-live-queries-real-time-with-graphql",frontMatter:{title:"Subscriptions and Live Queries - Real Time with GraphQL",authors:"laurin",tags:["graphql","subscription","real-time"],date:"2021-04-21T00:00:00.000Z",description:"GraphQL subscriptions are used by many. Live Query adoption, however, has not advanced that much. Let's take a look at both methods for achieving real-time communication with GraphQL.",image:"/blog-assets/subscriptions-and-live-queries-real-time-with-graphql/cover.png"}},{kind:"MdxPage",name:"support-nodejs-esm",route:"/blog/support-nodejs-esm",frontMatter:{title:"What does it take to support Node.js ESM?",authors:"pablosz",tags:["nodejs","mjs","esm","typescript"],date:"2021-08-12T00:00:00.000Z",description:"I have worked on all The Guild's libraries and graphql-js to support ESM. Here is how you can do it too.",image:"/blog-assets/nodejs-esm/nodejs_logo.png"}},{kind:"MdxPage",name:"swift-graphql",route:"/blog/swift-graphql",frontMatter:{title:"SwiftGraphQL - A GraphQL client for Swift lovers.",authors:"maticzav",tags:["graphql","swift","client","swift-graphql"],date:"2021-08-02T00:00:00.000Z",description:"SwiftGraphQL lets you use all the power Swift gives you to query your data. It feels like magic.",image:"/blog-assets/swift-graphql/thumbnail.png",thumbnail:"/blog-assets/swift-graphql/thumbnail.png"}},{kind:"Folder",name:"tag",route:"/blog/tag",children:[{kind:"Meta",data:{"*":{type:"page",display:"hidden",theme:{layout:"full",timestamp:!1}}}}]},{kind:"MdxPage",name:"taking-over-merge-graphql-schemas",route:"/blog/taking-over-merge-graphql-schemas",frontMatter:{title:"The Guild is taking over maintenance of merge-graphql-schemas",authors:"uri",tags:["graphql","merge-graphql-schemas"],date:"2019-06-18T00:00:00.000Z",description:"The Guild is taking over maintenance of merge-graphql-schemas, so let's talk about GraphQL Schema management",image:"/medium/0a4d55d345d123fa0b0c131d55ea903b.png"}},{kind:"MdxPage",name:"the-anatomy-of-a-graphql-request",route:"/blog/the-anatomy-of-a-graphql-request",frontMatter:{title:"The Anatomy of a GraphQL Request",authors:"laurin",tags:["graphql"],date:"2022-01-30T00:00:00.000Z",description:"Let's go back to the basics and break down a GraphQL request.",thumbnail:"/blog-assets/the-anatomy-of-a-graphql-request/thumbnail.png",image:"/blog-assets/the-anatomy-of-a-graphql-request/image.png"}},{kind:"MdxPage",name:"typed-document-node",route:"/blog/typed-document-node",frontMatter:{title:"TypedDocumentNode: the next generation of GraphQL and TypeScript",authors:"dotan",tags:["graphql","codegen","typescript","react"],date:"2020-07-22T00:00:00.000Z",updateDate:"2020-08-02T00:00:00.000Z",description:"Using GraphQL and Typescript on the client just became a lot easier!",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"typescript-graphql-unions-types",route:"/blog/typescript-graphql-unions-types",frontMatter:{title:"Getting the Best of TypeScript and GraphQL: Union Types",description:"The combination of TypeScript and GraphQL can be very powerful. Both TypeScript and GraphQL support the concept of discriminated unions.",authors:"tuvalSimha",tags:["graphql","typescript","codegen"],date:"2022-10-18T00:00:00.000Z",image:"/blog-assets/typescript-unions-types/cover.png",thumbnail:"/blog-assets/typescript-unions-types/thumbnail.png"}},{kind:"MdxPage",name:"unleash-the-power-of-fragments-with-graphql-codegen",route:"/blog/unleash-the-power-of-fragments-with-graphql-codegen",frontMatter:{title:"Unleash the power of Fragments with GraphQL Codegen",authors:"laurin",tags:["graphql","codegen","react","typescript","relay","apollo","urql"],date:"2022-08-05T00:00:00.000Z",description:"The most important parts of Relay are the concepts of building and scaling applications, let's show how you can use these patterns in your existing project, no matter what client library you are currently using.",image:"/blog-assets/unleash-the-power-of-fragments-with-graphql-codegen/cover.png",thumbnail:"/blog-assets/unleash-the-power-of-fragments-with-graphql-codegen/thumbnail.png"}},{kind:"MdxPage",name:"whats-new-in-graphql-cli-4.1.0",route:"/blog/whats-new-in-graphql-cli-4.1.0",frontMatter:{title:"What's new in GraphQL CLI 4.1",authors:"ephelan",tags:["graphql","node","graphql-cli","graphback"],date:"2020-10-15T00:00:00.000Z",description:"GraphQL CLI - experience the modern way for developing full-stack GraphQL applications.",image:"/blog-assets/graphql-cli/cover.webm",thumbnail:"/blog-assets/graphql-cli/cover.png"}},{kind:"MdxPage",name:"whats-new-in-graphql-codegen-v2",route:"/blog/whats-new-in-graphql-codegen-v2",frontMatter:{title:"What's new in GraphQL-Codegen v2?",authors:"dotan",tags:["graphql","codegen","typescript"],date:"2021-08-03T00:00:00.000Z",description:"Human-readable types, improved infrastructure, a new plugin for TypeScript and more!",image:"/blog-assets/graphql-code-generator/cover.png"}},{kind:"MdxPage",name:"whats-new-on-meteor-client-bundler",route:"/blog/whats-new-on-meteor-client-bundler",frontMatter:{title:"Meteor Client Bundler — React Native support, handling Meteor imports",tags:["meteor","react","react-native"],authors:"arda",date:"2018-07-13T00:00:00.000Z",description:"Introduction to new features of MCB. Better React Native support, handling Meteor imports etc.",image:"/blog-assets/whats-new-on-meteor-client-bundler/cover.png"}},{kind:"MdxPage",name:"whatsapp-clone-apollo-angular-graphql-typescript-and-postgresql",route:"/blog/whatsapp-clone-apollo-angular-graphql-typescript-and-postgresql",frontMatter:{title:"WhatsApp Clone - Angular, GraphQL, Apollo, TypeScript and PostgreSQL",authors:"niccolo",tags:["whatsapp-clone","angular","graphql","typescript","postgres"],date:"2019-02-25T00:00:00.000Z",description:"An open-source full-stack example app made with Angular 7.2, TypeScript, GraphQL Subscriptions, GraphQL Code Generator, GraphQL Modules, PostgreSQL and TypeORM.",image:"/blog-assets/whatsapp-clone-apollo-angular-graphql-typescript-and-postgresql/cover.jpeg"}},{kind:"MdxPage",name:"whatsapp-clone-react-hooks-graphql-typescript-and-postgresql",route:"/blog/whatsapp-clone-react-hooks-graphql-typescript-and-postgresql",frontMatter:{title:"WhatsApp Clone - GraphQL, Apollo, TypeScript and PostgreSQL",authors:"eytan",tags:["whatsapp-clone","react","graphql","typescript","postgres"],date:"2019-02-01T00:00:00.000Z",description:"Fully functional WhatsApp Clone using React (Hooks+Suspense), GraphQL, Apollo, TypeScript and PostgreSQL",image:"/medium/3eb34dbe848e635cbc12a38471b2da4e.jpeg"}},{kind:"MdxPage",name:"whatsapp-clone-with-ionic-angular-and-meteor",route:"/blog/whatsapp-clone-with-ionic-angular-and-meteor",frontMatter:{title:"Build a WhatsApp Clone with Ionic 2, Angular 2, and Meteor",authors:"uri",tags:["whatsapp-clone","angular","meteor-ionic"],date:"2016-11-30T00:00:00.000Z",description:"Build a WhatsApp Clone with Ionic 2, Angular 2, and Meteor",image:"/medium/bb1bd34e9a4cde578539f00cc4696f50.png"}},{kind:"MdxPage",name:"whatsapp-clone-with-meteor-and-ionic",route:"/blog/whatsapp-clone-with-meteor-and-ionic",frontMatter:{title:"Build a WhatsApp clone with Meteor and Ionic — Meteor Platform version",authors:"uri",tags:["whatsapp-clone","meteor","ionic"],date:"2015-10-16T00:00:00.000Z",description:"Build a WhatsApp clone using Meteor, Angular, and the Ionic Framework for CSS and mobile components",image:"/medium/d049989e715f4848c09315b23902da8d.png"}}]},{kind:"MdxPage",name:"blog",route:"/blog",frontMatter:{title:"Blog",description:"Announcements about our Open-Source projects",skipSync:!0}},{kind:"MdxPage",name:"index",route:"/",frontMatter:{title:"GraphQL Tools",description:"Open Source developers with experience of working with the largest companies and applications. GraphQL consulting, workshops and trainings."}},{kind:"MdxPage",name:"logos",route:"/logos",frontMatter:{description:"Open Source developers with experience of working with the largest companies and applications. GraphQL consulting, workshops and trainings"}},{kind:"Folder",name:"newsletter",route:"/newsletter",children:[{kind:"Meta",data:{"*":{theme:{sidebar:!1,toc:!0,typesetting:"article"}},"issue-1":"Issue 1"}},{kind:"MdxPage",name:"issue-1",route:"/newsletter/issue-1",frontMatter:{date:"2022-05-26T00:00:00.000Z",description:"The Guild Newsletter is a monthly newsletter that features the latest news and updates from The Guild and GraphQL Foundation projects as well as tips on how to get the best of our tools."}}]},{kind:"MdxPage",name:"services",route:"/services",frontMatter:{title:"Our Services",description:"Open Source developers with experience of working with the largest companies and applications. GraphQL consulting, workshops and trainings."}},{kind:"MdxPage",name:"solutions",route:"/solutions",frontMatter:{description:"Recommended GraphQL resources"}}],headings:[{depth:2,value:"The Easy Problem: Code Ownership",id:"the-easy-problem-code-ownership"},{depth:3,value:"Problem: How to Manage Code Ownership?",id:"problem-how-to-manage-code-ownership"},{depth:3,value:"Solution: Split into Modules",id:"solution-split-into-modules"},{depth:2,value:"The Hard Problem: Best Practice Alignment at Scale",id:"the-hard-problem-best-practice-alignment-at-scale"},{depth:3,value:"1. How to Enforce Best Practices for All Teams",id:"1-how-to-enforce-best-practices-for-all-teams"},{depth:3,value:"2. How to Minimise Noise to the Maintainers",id:"2-how-to-minimise-noise-to-the-maintainers"},{depth:3,value:"Solution: Use GraphQL Server Codegen Preset",id:"solution-use-graphql-server-codegen-preset"},{depth:4,value:"Generated Files",id:"generated-files"},{depth:4,value:"Other GraphQL Types",id:"other-graphql-types"},{depth:4,value:"Mappers Convention",id:"mappers-convention"},{depth:4,value:"Gradual Migration Supported",id:"gradual-migration-supported"},{depth:4,value:"Customisable Conventions",id:"customisable-conventions"},{depth:3,value:"Differences between Server Preset and graphql-modules",id:"differences-between-server-preset-and-graphql-modules"},{depth:2,value:"Summary",id:"summary"}],timestamp:1677946571e3,flexsearch:{codeblocks:!0},newNextLinkBehavior:!0,title:"Scalable APIs with GraphQL Server Codegen Preset"},themeConfig:a.Z,pageNextRoute:"/blog/scalable-apis-with-graphql-server-codegen-preset",pageOptsChecksum:void 0,dynamicMetaModules:[]})}},function(e){e.O(0,[2893,1946,2027,9774,2888,179],function(){return e(e.s=52427)}),_N_E=e.O()}]);